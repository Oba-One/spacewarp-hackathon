{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finishedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "turnsLeft",
              "type": "uint8"
            }
          ],
          "internalType": "struct MatchType",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finishedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "turnsLeft",
              "type": "uint8"
            }
          ],
          "internalType": "struct MatchType",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "indexer",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finishedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "turnsLeft",
              "type": "uint8"
            }
          ],
          "internalType": "struct MatchType",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162003239380380620032398339810160408190526200003491620002b9565b807f0f9dd24bbd2f19675b3fca355a567814eafa262312f033a2e289b40d70c055888181620000633362000127565b60028190556001600160a01b03821615620000835762000083826200019b565b505060405162000093906200029d565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df90620002ab565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b039290921691909117905550620002eb915050565b60006200013e6200025360201b62000e021760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b620001a562000277565b6001600160a01b0316336001600160a01b031614620001d757604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200023757600080fd5b505af11580156200024c573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60006200028e6200025360201b62000e021760201c565b546001600160a01b0316919050565b61084c806200215f83390190565b61088e80620029ab83390190565b600060208284031215620002cc57600080fd5b81516001600160a01b0381168114620002e457600080fd5b9392505050565b611e6480620002fb6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638b282947116100cd578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102ff578063d743569314610312578063f2fde38b1461032557600080fd5b8063b8bc073d146102cc578063bf4fe57e146102ec57600080fd5b80639d2c76b4116100b25780639d2c76b41461028f578063af640d0f146102a2578063b361be46146102b957600080fd5b80638b282947146102745780638da5cb5b1461028757600080fd5b80634fef6a38116101245780636b122fe0116101095780636b122fe01461022857806375c0669c1461023e578063861eb9051461025157600080fd5b80634fef6a381461020257806366c52bed1461021557600080fd5b80630ff4c9161461015657806330b67baa1461019357806331b933b9146101d85780634cc82215146101ed575b600080fd5b6101696101643660046115df565b610338565b6040805182518152602080840151908201529181015160ff16908201526060015b60405180910390f35b6000546101b39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018a565b6101e06103a5565b60405161018a91906115f8565b6102006101fb3660046115df565b610460565b005b61020061021036600461163c565b6104ab565b610200610223366004611691565b610589565b61023061059a565b60405161018a929190611751565b61020061024c36600461163c565b6107ba565b61026461025f36600461163c565b610870565b604051901515815260200161018a565b61020061028236600461194d565b6108fb565b6101b3610944565b61020061029d36600461163c565b610984565b6102ab60025481565b60405190815260200161018a565b6101e06102c7366004611994565b610aad565b6102df6102da3660046115df565b610b6a565b60405161018a91906119d1565b6102006102fa36600461163c565b610c0c565b61026461030d3660046115df565b610ce7565b6101e06103203660046119e4565b610d7b565b61020061033336600461163c565b610d89565b61035f60405180606001604052806000815260200160008152602001600060ff1681525090565b600080600061036d85610b6a565b8060200190518101906103809190611a0f565b60408051606081018252938452602084019290925260ff169082015295945050505050565b600354604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa158015610415573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261045b9190810190611a48565b905090565b61046933610870565b61049f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a881610e26565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461051b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b61059682610282836110e5565b5050565b60408051600380825260808201909252606091829190816020015b60608152602001906001900390816105b557505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600981526020017f73746172746564417400000000000000000000000000000000000000000000008152508260008151811061063557610635611aee565b6020026020010181905250600d8160008151811061065557610655611aee565b6020026020010190602181111561066e5761066e611722565b9081602181111561068157610681611722565b815250506040518060400160405280600a81526020017f66696e6973686564417400000000000000000000000000000000000000000000815250826001815181106106ce576106ce611aee565b6020026020010181905250600d816001815181106106ee576106ee611aee565b6020026020010190602181111561070757610707611722565b9081602181111561071a5761071a611722565b815250506040518060400160405280600981526020017f7475726e734c65667400000000000000000000000000000000000000000000008152508260028151811061076757610767611aee565b6020026020010181905250600a8160028151811061078757610787611aee565b602002602001019060218111156107a0576107a0611722565b908160218111156107b3576107b3611722565b9052509091565b6107c333610870565b6107f9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806108f557506108c6610944565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61090433610870565b61093a576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105968282611130565b600061045b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146109f4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610a9257600080fd5b505af1158015610aa6573d6000803e3d6000fd5b5050505050565b60048054825160208401206040517f796c5e940000000000000000000000000000000000000000000000000000000081529283015260609173ffffffffffffffffffffffffffffffffffffffff9091169063796c5e9490602401600060405180830381865afa158015610b24573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108f59190810190611a48565b6000818152600160205260409020805460609190610b8790611b1d565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb390611b1d565b8015610c005780601f10610bd557610100808354040283529160200191610c00565b820191906000526020600020905b815481529060010190602001808311610be357829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c7c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6003546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f59190611b6a565b60606108f56102c7836110e5565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610df9576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a8816113c7565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea1391610e6391611b8c565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede9190611c20565b600003610ee85750565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a91610f2591611b8c565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b158015610f8057600080fd5b505af1158015610f94573d6000803e3d6000fd5b50506003546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b15801561100457600080fd5b505af1158015611018573d6000803e3d6000fd5b50505050611025816113d0565b60005b600554811015610596576005818154811061104557611045611aee565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b1580156110ba57600080fd5b505af11580156110ce573d6000803e3d6000fd5b5050505080806110dd90611c39565b915050611028565b6060813560208301356110fd84840160408601611c98565b60408051602081019490945283019190915260ff1660608201526080016040516020818303038152906040529050919050565b6003546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561119c57600080fd5b505af11580156111b0573d6000803e3d6000fd5b505060045460008581526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a92506111f191611b8c565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b15801561124c57600080fd5b505af1158015611260573d6000803e3d6000fd5b505060048054845160208601206040517f771602f7000000000000000000000000000000000000000000000000000000008152928301526024820186905273ffffffffffffffffffffffffffffffffffffffff16925063771602f79150604401600060405180830381600087803b1580156112da57600080fd5b505af11580156112ee573d6000803e3d6000fd5b505050506112fc828261143e565b60005b6005548110156113c2576005818154811061131c5761131c611aee565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b8389061137d9086908690600401611cb5565b600060405180830381600087803b15801561139757600080fd5b505af11580156113ab573d6000803e3d6000fd5b5050505080806113ba90611c39565b9150506112ff565b505050565b6104a8816114e5565b60008181526001602052604081206113e791611591565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610a78565b60008281526001602052604090206114568282611d14565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906114af9085908590600401611cb5565b600060405180830381600087803b1580156114c957600080fd5b505af11580156114dd573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461159d90611b1d565b6000825580601f106115ad575050565b601f0160209004906000526020600020908101906104a891905b808211156115db57600081556001016115c7565b5090565b6000602082840312156115f157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561163057835183529284019291840191600101611614565b50909695505050505050565b60006020828403121561164e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461167257600080fd5b9392505050565b60006060828403121561168b57600080fd5b50919050565b600080608083850312156116a457600080fd5b823591506116b58460208501611679565b90509250929050565b6000815180845260005b818110156116e4576020818501810151868301820152016116c8565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156117c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526117b48683516116be565b9550938201939082019060010161177a565b50508584038187015286518085528782019482019350915060005b8281101561183457845160228110611822577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016117e1565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118b7576118b7611841565b604052919050565b600082601f8301126118d057600080fd5b813567ffffffffffffffff8111156118ea576118ea611841565b61191b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611870565b81815284602083860101111561193057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561196057600080fd5b82359150602083013567ffffffffffffffff81111561197e57600080fd5b61198a858286016118bf565b9150509250929050565b6000602082840312156119a657600080fd5b813567ffffffffffffffff8111156119bd57600080fd5b6119c9848285016118bf565b949350505050565b60208152600061167260208301846116be565b6000606082840312156119f657600080fd5b6116728383611679565b60ff811681146104a857600080fd5b600080600060608486031215611a2457600080fd5b83519250602084015191506040840151611a3d81611a00565b809150509250925092565b60006020808385031215611a5b57600080fd5b825167ffffffffffffffff80821115611a7357600080fd5b818501915085601f830112611a8757600080fd5b815181811115611a9957611a99611841565b8060051b9150611aaa848301611870565b8181529183018401918481019088841115611ac457600080fd5b938501935b83851015611ae257845182529385019390850190611ac9565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611b3157607f821691505b60208210810361168b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060208284031215611b7c57600080fd5b8151801515811461167257600080fd5b6000808354611b9a81611b1d565b60018281168015611bb25760018114611be557611c14565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611c14565b8760005260208060002060005b85811015611c0b5781548a820152908401908201611bf2565b50505082870194505b50929695505050505050565b600060208284031215611c3257600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c91577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600060208284031215611caa57600080fd5b813561167281611a00565b8281526040602082015260006119c960408301846116be565b601f8211156113c257600081815260208120601f850160051c81016020861015611cf55750805b601f850160051c820191505b818110156114dd57828155600101611d01565b815167ffffffffffffffff811115611d2e57611d2e611841565b611d4281611d3c8454611b1d565b84611cce565b602080601f831160018114611d955760008415611d5f5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556114dd565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611de257888601518255948401946001909101908401611dc3565b5085821015611e1e57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220908e6788ef2febea1871cb6daa853b88f1c4081bff4aae79cb9167bd9d569c6264736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b6100b4565b600061003361009060201b6105431760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b610789806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e114610100578063949d225d1461012a578063cccf7a8e1461013b578063f2fde38b1461015e57600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461061b565b610171565b005b6100aa610233565b6040516100b79190610634565b60405180910390f35b6100a06100ce36600461061b565b61028b565b6100db6103ef565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b61011361010e36600461061b565b610434565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014e61014936600461061b565b610467565b60405190151581526020016100b7565b6100a061016c366004610678565b6104ca565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101e1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101ea81610467565b61023057600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561028157602002820191906000526020600020905b81548152602001906001019080831161026d575b5050505050905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146102fb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030481610467565b156102305760008054610319906001906106b5565b81548110610329576103296106f5565b9060005260206000200154600060016000848152602001908152602001600020548154811061035a5761035a6106f5565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610391576103916106f5565b9060005260206000200154815260200190815260200160002081905550600160008281526020019081526020016000206000905560008054806103d6576103d6610724565b6001900381819060005260206000200160009055905550565b600061042f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008061044083610467565b61044f57506000928392509050565b50506000908152600160208190526040909120549091565b60008054810361047957506000919050565b60008281526001602052604081205490036104b55781600080815481106104a2576104a26106f5565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461053a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61023081610567565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610230928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561062d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561066c57835183529284019291840191600101610650565b50909695505050505050565b60006020828403121561068a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106ae57600080fd5b9392505050565b818103818111156106ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220145c492eb333a292f63680f1904d3455065a39cbc986f450736715cdf4e6e1a064736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b6100b4565b600061003361009060201b6105691760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6107cb806100c36000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff81461012e578063f2fde38b1461015157600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610641565b610164565b005b6100956100a5366004610641565b610301565b6100bd6100b8366004610663565b6103b5565b6040516100ca919061067c565b60405180910390f35b6100f36100e1366004610663565b60009081526020819052604090205490565b6040519081526020016100ca565b610109610415565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ca565b61014161013c366004610641565b61045a565b60405190151581526020016100ca565b61009561015f3660046106c0565b6104ed565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101d4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101de828261045a565b156102fd57600082815260208190526040902080546101ff906001906106fd565b8154811061020f5761020f610737565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061024957610249610737565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061029757610297610737565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102e6576102e6610766565b600190038181906000526020600020016000905590555b5050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610371576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61037b828261045a565b6102fd5760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561040957602002820191906000526020600020905b8154815260200190600101908083116103f5575b50505050509050919050565b60006104557f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6000828152602081905260408120548103610477575060006104e7565b600083815260016020908152604080832085845290915281205490036104c957600083815260208190526040812080548492906104b6576104b6610737565b90600052602060002001541490506104e7565b50600082815260016020908152604080832084845290915290205415155b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461055d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105668161058d565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610566928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806040838503121561065457600080fd5b50508035926020909101359150565b60006020828403121561067557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156106b457835183529284019291840191600101610698565b50909695505050505050565b6000602082840312156106d257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106f657600080fd5b9392505050565b818103818111156104e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212201a701cb525b7533891cd5d8f31f30bf71519ab64b44ec00f1613cfe05fbfd9a664736f6c63430008110033",
    "sourceMap": "274:1297:105:-:0;;;317:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;354:5;179:32;354:5;179:32;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;1107:9:1::1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1096:8:1::1;:20:::0;;-1:-1:-1;;;;;;1096:20:1::1;-1:-1:-1::0;;;;;1096:20:1;;;::::1;::::0;;;::::1;::::0;;1140:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1122:15:1::1;:30:::0;;-1:-1:-1;;;;;;1122:30:1::1;-1:-1:-1::0;;;;;1122:30:1;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;274:1297:105;;-1:-1:-1;;274:1297:105;1203:207:33;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:33;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:33;-1:-1:-1;;;;;1386:17:33;;;;;;;;;;1203:207::o;1302:137:0:-;436:8:33;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:33;:10;-1:-1:-1;;;;;422:22:33;;418:54;;453:19;;-1:-1:-1;;;453:19:33;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:127::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:127;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:34:-;186:49;;242:159::o;647:111:33:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:33;;647:111;-1:-1:-1;647:111:33:o;274:1297:105:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:290:127:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:127;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:127:o;309:274::-;274:1297:105;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c80638b282947116100cd578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102ff578063d743569314610312578063f2fde38b1461032557600080fd5b8063b8bc073d146102cc578063bf4fe57e146102ec57600080fd5b80639d2c76b4116100b25780639d2c76b41461028f578063af640d0f146102a2578063b361be46146102b957600080fd5b80638b282947146102745780638da5cb5b1461028757600080fd5b80634fef6a38116101245780636b122fe0116101095780636b122fe01461022857806375c0669c1461023e578063861eb9051461025157600080fd5b80634fef6a381461020257806366c52bed1461021557600080fd5b80630ff4c9161461015657806330b67baa1461019357806331b933b9146101d85780634cc82215146101ed575b600080fd5b6101696101643660046115df565b610338565b6040805182518152602080840151908201529181015160ff16908201526060015b60405180910390f35b6000546101b39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161018a565b6101e06103a5565b60405161018a91906115f8565b6102006101fb3660046115df565b610460565b005b61020061021036600461163c565b6104ab565b610200610223366004611691565b610589565b61023061059a565b60405161018a929190611751565b61020061024c36600461163c565b6107ba565b61026461025f36600461163c565b610870565b604051901515815260200161018a565b61020061028236600461194d565b6108fb565b6101b3610944565b61020061029d36600461163c565b610984565b6102ab60025481565b60405190815260200161018a565b6101e06102c7366004611994565b610aad565b6102df6102da3660046115df565b610b6a565b60405161018a91906119d1565b6102006102fa36600461163c565b610c0c565b61026461030d3660046115df565b610ce7565b6101e06103203660046119e4565b610d7b565b61020061033336600461163c565b610d89565b61035f60405180606001604052806000815260200160008152602001600060ff1681525090565b600080600061036d85610b6a565b8060200190518101906103809190611a0f565b60408051606081018252938452602084019290925260ff169082015295945050505050565b600354604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa158015610415573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261045b9190810190611a48565b905090565b61046933610870565b61049f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a881610e26565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461051b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b61059682610282836110e5565b5050565b60408051600380825260808201909252606091829190816020015b60608152602001906001900390816105b557505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600981526020017f73746172746564417400000000000000000000000000000000000000000000008152508260008151811061063557610635611aee565b6020026020010181905250600d8160008151811061065557610655611aee565b6020026020010190602181111561066e5761066e611722565b9081602181111561068157610681611722565b815250506040518060400160405280600a81526020017f66696e6973686564417400000000000000000000000000000000000000000000815250826001815181106106ce576106ce611aee565b6020026020010181905250600d816001815181106106ee576106ee611aee565b6020026020010190602181111561070757610707611722565b9081602181111561071a5761071a611722565b815250506040518060400160405280600981526020017f7475726e734c65667400000000000000000000000000000000000000000000008152508260028151811061076757610767611aee565b6020026020010181905250600a8160028151811061078757610787611aee565b602002602001019060218111156107a0576107a0611722565b908160218111156107b3576107b3611722565b9052509091565b6107c333610870565b6107f9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806108f557506108c6610944565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61090433610870565b61093a576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105968282611130565b600061045b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146109f4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610a9257600080fd5b505af1158015610aa6573d6000803e3d6000fd5b5050505050565b60048054825160208401206040517f796c5e940000000000000000000000000000000000000000000000000000000081529283015260609173ffffffffffffffffffffffffffffffffffffffff9091169063796c5e9490602401600060405180830381865afa158015610b24573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108f59190810190611a48565b6000818152600160205260409020805460609190610b8790611b1d565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb390611b1d565b8015610c005780601f10610bd557610100808354040283529160200191610c00565b820191906000526020600020905b815481529060010190602001808311610be357829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c7c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6003546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f59190611b6a565b60606108f56102c7836110e5565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610df9576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a8816113c7565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea1391610e6391611b8c565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede9190611c20565b600003610ee85750565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a91610f2591611b8c565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b158015610f8057600080fd5b505af1158015610f94573d6000803e3d6000fd5b50506003546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b15801561100457600080fd5b505af1158015611018573d6000803e3d6000fd5b50505050611025816113d0565b60005b600554811015610596576005818154811061104557611045611aee565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b1580156110ba57600080fd5b505af11580156110ce573d6000803e3d6000fd5b5050505080806110dd90611c39565b915050611028565b6060813560208301356110fd84840160408601611c98565b60408051602081019490945283019190915260ff1660608201526080016040516020818303038152906040529050919050565b6003546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561119c57600080fd5b505af11580156111b0573d6000803e3d6000fd5b505060045460008581526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a92506111f191611b8c565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b15801561124c57600080fd5b505af1158015611260573d6000803e3d6000fd5b505060048054845160208601206040517f771602f7000000000000000000000000000000000000000000000000000000008152928301526024820186905273ffffffffffffffffffffffffffffffffffffffff16925063771602f79150604401600060405180830381600087803b1580156112da57600080fd5b505af11580156112ee573d6000803e3d6000fd5b505050506112fc828261143e565b60005b6005548110156113c2576005818154811061131c5761131c611aee565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b8389061137d9086908690600401611cb5565b600060405180830381600087803b15801561139757600080fd5b505af11580156113ab573d6000803e3d6000fd5b5050505080806113ba90611c39565b9150506112ff565b505050565b6104a8816114e5565b60008181526001602052604081206113e791611591565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610a78565b60008281526001602052604090206114568282611d14565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906114af9085908590600401611cb5565b600060405180830381600087803b1580156114c957600080fd5b505af11580156114dd573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461159d90611b1d565b6000825580601f106115ad575050565b601f0160209004906000526020600020908101906104a891905b808211156115db57600081556001016115c7565b5090565b6000602082840312156115f157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561163057835183529284019291840191600101611614565b50909695505050505050565b60006020828403121561164e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461167257600080fd5b9392505050565b60006060828403121561168b57600080fd5b50919050565b600080608083850312156116a457600080fd5b823591506116b58460208501611679565b90509250929050565b6000815180845260005b818110156116e4576020818501810151868301820152016116c8565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156117c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526117b48683516116be565b9550938201939082019060010161177a565b50508584038187015286518085528782019482019350915060005b8281101561183457845160228110611822577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016117e1565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118b7576118b7611841565b604052919050565b600082601f8301126118d057600080fd5b813567ffffffffffffffff8111156118ea576118ea611841565b61191b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611870565b81815284602083860101111561193057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561196057600080fd5b82359150602083013567ffffffffffffffff81111561197e57600080fd5b61198a858286016118bf565b9150509250929050565b6000602082840312156119a657600080fd5b813567ffffffffffffffff8111156119bd57600080fd5b6119c9848285016118bf565b949350505050565b60208152600061167260208301846116be565b6000606082840312156119f657600080fd5b6116728383611679565b60ff811681146104a857600080fd5b600080600060608486031215611a2457600080fd5b83519250602084015191506040840151611a3d81611a00565b809150509250925092565b60006020808385031215611a5b57600080fd5b825167ffffffffffffffff80821115611a7357600080fd5b818501915085601f830112611a8757600080fd5b815181811115611a9957611a99611841565b8060051b9150611aaa848301611870565b8181529183018401918481019088841115611ac457600080fd5b938501935b83851015611ae257845182529385019390850190611ac9565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611b3157607f821691505b60208210810361168b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060208284031215611b7c57600080fd5b8151801515811461167257600080fd5b6000808354611b9a81611b1d565b60018281168015611bb25760018114611be557611c14565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611c14565b8760005260208060002060005b85811015611c0b5781548a820152908401908201611bf2565b50505082870194505b50929695505050505050565b600060208284031215611c3257600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c91577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600060208284031215611caa57600080fd5b813561167281611a00565b8281526040602082015260006119c960408301846116be565b601f8211156113c257600081815260208120601f850160051c81016020861015611cf55750805b601f850160051c820191505b818110156114dd57828155600101611d01565b815167ffffffffffffffff811115611d2e57611d2e611841565b611d4281611d3c8454611b1d565b84611cce565b602080601f831160018114611d955760008415611d5f5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556114dd565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611de257888601518255948401946001909101908401611dc3565b5085821015611e1e57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220908e6788ef2febea1871cb6daa853b88f1c4081bff4aae79cb9167bd9d569c6264736f6c63430008110033",
    "sourceMap": "274:1297:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:279;;;;;;:::i;:::-;;:::i;:::-;;;;419:13:127;;401:32;;489:4;477:17;;;471:24;449:20;;;442:54;544:17;;;538:24;564:4;534:35;512:20;;;505:65;389:2;374:18;942:279:105;;;;;;;;870:20:0;;;;;;;;;;;;757:42:127;745:55;;;727:74;;715:2;700:18;870:20:0;581:226:127;1400:116:1;;;:::i;:::-;;;;;;;:::i;2088:85:0:-;;;;;;:::i;:::-;;:::i;:::-;;947:127:6;;;;;;:::i;:::-;;:::i;823:113:105:-;;;;;;:::i;:::-;;:::i;373:444::-;;;:::i;:::-;;;;;;;;:::i;2104:128:1:-;;;;;;:::i;:::-;;:::i;440:160:6:-;;;;;;:::i;:::-;;:::i;:::-;;;4750:14:127;;4743:22;4725:41;;4713:2;4698:18;440:160:6;4585:187:127;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:32:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;6438:25:127;;;6426:2;6411:18;1052:17:0;6292:177:127;1698:228:1;;;;;;:::i;:::-;;:::i;2623:171:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1228:129:6:-;;;;;;:::i;:::-;;:::i;1204:111:1:-;;;;;;:::i;:::-;;:::i;1227:162:105:-;;;;;;:::i;:::-;;:::i;514:113:32:-;;;;;;:::i;:::-;;:::i;942:279:105:-;997:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;997:16:105;1026:17;1045:18;1065:15;1107:19;1119:6;1107:11;:19::i;:::-;1096:58;;;;;;;;;;;;:::i;:::-;1171:43;;;;;;;;;;;;;;;;;;;;;;;;;942:279;-1:-1:-1;;;;;942:279:105:o;1400:116:1:-;1492:8;;:19;;;;;;;;1461:16;;1492:8;;;:17;;:19;;;;;:8;;:19;;;;;;;:8;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1485:26;;1400:116;:::o;2088:85:0:-;708:23:6;720:10;708:11;:23::i;:::-;703:80;;748:28;;;;;;;;;;;;;;703:80;2153:15:0::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;947:127:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1011:51:6::1;;:43;:51:::0;;;238:53:7;1011:51:6::1;::::0;;;;:58;;;::::1;1065:4;1011:58;::::0;;947:127::o;823:113:105:-;896:33;900:6;908:20;921:6;908:12;:20::i;896:33::-;823:113;;:::o;373:444::-;501:15;;;514:1;501:15;;;;;;;;;424:20;;;;501:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;535:29:105;;;562:1;535:29;;;;;;;;;494:22;;-1:-1:-1;535:29:105;;;;;;;;;;-1:-1:-1;535:29:105;526:38;;575:21;;;;;;;;;;;;;;;;;:4;580:1;575:7;;;;;;;;:::i;:::-;;;;;;:21;;;;618:28;606:6;613:1;606:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;657:22;;;;;;;;;;;;;;;;;:4;662:1;657:7;;;;;;;;:::i;:::-;;;;;;:22;;;;701:28;689:6;696:1;689:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;740:21;;;;;;;;;;;;;;;;;:4;745:1;740:7;;;;;;;;:::i;:::-;;;;;;:21;;;;783:27;771:6;778:1;771:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;373:444:105;;:::o;2104:128:1:-;708:23:6;720:10;708:11;:23::i;:::-;703:80;;748:28;;;;;;;;;;;;;;703:80;2189:8:1::1;:38:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2189:38:1;;;;;::::1;::::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2104:128::o;440:160:6:-;519:53;;;500:4;519:53;;;238::7;519::6;;;;;;;;;:76;;;588:7;:5;:7::i;:::-;576:19;;:8;:19;;;519:76;512:83;440:160;-1:-1:-1;;440:160:6:o;1736:106:0:-;708:23:6;720:10;708:11;:23::i;:::-;703:80;;748:28;;;;;;;;;;;;;;703:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;378:87:32:-:0;424:7;450:8;186:49:34;722:29:33;;;;647:111;1302:137:0;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;9067:74:127::0;9157:18;;;9150:34;;;;1384:31:0::1;::::0;9040:18:127;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;1698:228:1:-;1870:15;;;1903:16;;;;;;1870:51;;;;;;;;6438:25:127;1786:16:1;;1870:15;;;;;:24;;6411:18:127;;1870:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2623:171:0:-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1228:129:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1301:51:6::1;;:43;:51:::0;;;238:53:7;1301:51:6::1;::::0;;;;1294:58;;;::::1;::::0;;1228:129::o;1204:111:1:-;1290:8;;:20;;;;;;;;6438:25:127;;;1271:4:1;;1290:8;;;:12;;6411:18:127;;1290:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1227:162:105:-;1305:16;1340:42;1361:20;1374:6;1361:12;:20::i;514:113:32:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:32::1;612:7;593:18;:27::i;242:159:34:-:0;186:49;;242:159::o;2905:591:1:-;3027:15;;;3066:21;;;3027:15;3066:21;;;;;;;3056:32;;3027:15;;;;;:20;;3056:32;;;:::i;:::-;;;;;;;;;3027:63;;;;;;;;;;;6438:25:127;6411:18;;3027:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3094:1;3027:68;3023:81;;2905:591;:::o;3023:81::-;3160:15;;;3201:21;;;3160:15;3201:21;;;;;;;3191:32;;3160:15;;;;;:22;;3191:32;;;:::i;:::-;;;;;;;;;3160:73;;;;;;;;;;;11310:25:127;11351:18;;;11344:34;;;11283:18;;3160:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3286:8:1;;:23;;;;;;;;6438:25:127;;;3286:8:1;;;;;-1:-1:-1;3286:15:1;;-1:-1:-1;6411:18:127;;3286:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:21;3391:6;3377:13;:21::i;:::-;3410:9;3405:87;3429:8;:15;3425:19;;3405:87;;;3459:8;3468:1;3459:11;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;;;;;;6438:25:127;;;3459:11:1;;;;;:18;;6411::127;;3459:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3446:3;;;;;:::i;:::-;;;;3405:87;;1395:174:105;1466:12;1508:16;;1526:17;;;;1545:16;;;;;;;;:::i;:::-;1497:65;;;;;;12189:25:127;;;;12230:18;;12223:34;;;;12305:4;12293:17;12273:18;;;12266:45;12162:18;;1497:65:105;;;;;;;;;;;;1490:72;;1395:174;;;:::o;2279:579:1:-;2385:8;;:20;;;;;;;;6438:25:127;;;2385:8:1;;;;;:12;;6411:18:127;;2385:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2487:15:1;;;2528:21;;;2487:15;2528:21;;;;;;;2518:32;;2487:15;;;;;-1:-1:-1;2487:22:1;;-1:-1:-1;2518:32:1;;;:::i;:::-;;;;;;;;;2487:73;;;;;;;;;;;11310:25:127;11351:18;;;11344:34;;;11283:18;;2487:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2616:15:1;;;2644:16;;;;;;2616:54;;;;;;;;11310:25:127;11351:18;;;11344:34;;;2616:15:1;;;-1:-1:-1;2616:19:1;;-1:-1:-1;11283:18:127;;2616:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2728:25;2739:6;2747:5;2728:10;:25::i;:::-;2765:9;2760:94;2784:8;:15;2780:19;;2760:94;;;2814:8;2823:1;2814:11;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;;;:11;;;;;:18;;:33;;2833:6;;2841:5;;2814:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:3;;;;;:::i;:::-;;;;2760:94;;;;2279:579;;:::o;1100:97:33:-;1172:18;1182:7;1172:9;:18::i;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;6438:25:127;;;4366:5:0;;;;;4359:43;;6411:18:127;;4359:51:0;6292:177:127;3672:226:0;3778:21;;;;:13;:21;;;;;:29;3802:5;3778:21;:29;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1203:207:33:-;186:49:34;1359:7:33;;1338:38;;;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:127:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:127;;14:180;-1:-1:-1;14:180:127:o;812:632::-;983:2;1035:21;;;1105:13;;1008:18;;;1127:22;;;954:4;;983:2;1206:15;;;;1180:2;1165:18;;;954:4;1249:169;1263:6;1260:1;1257:13;1249:169;;;1324:13;;1312:26;;1393:15;;;;1358:12;;;;1285:1;1278:9;1249:169;;;-1:-1:-1;1435:3:127;;812:632;-1:-1:-1;;;;;;812:632:127:o;1449:309::-;1508:6;1561:2;1549:9;1540:7;1536:23;1532:32;1529:52;;;1577:1;1574;1567:12;1529:52;1616:9;1603:23;1666:42;1659:5;1655:54;1648:5;1645:65;1635:93;;1724:1;1721;1714:12;1635:93;1747:5;1449:309;-1:-1:-1;;;1449:309:127:o;1763:157::-;1825:5;1870:2;1861:6;1856:3;1852:16;1848:25;1845:45;;;1886:1;1883;1876:12;1845:45;-1:-1:-1;1908:6:127;1763:157;-1:-1:-1;1763:157:127:o;1925:312::-;2023:6;2031;2084:3;2072:9;2063:7;2059:23;2055:33;2052:53;;;2101:1;2098;2091:12;2052:53;2137:9;2124:23;2114:33;;2166:65;2223:7;2218:2;2207:9;2203:18;2166:65;:::i;:::-;2156:75;;1925:312;;;;;:::o;2242:482::-;2284:3;2322:5;2316:12;2349:6;2344:3;2337:19;2374:1;2384:162;2398:6;2395:1;2392:13;2384:162;;;2460:4;2516:13;;;2512:22;;2506:29;2488:11;;;2484:20;;2477:59;2413:12;2384:162;;;2388:3;2591:1;2584:4;2575:6;2570:3;2566:16;2562:27;2555:38;2713:4;2643:66;2638:2;2630:6;2626:15;2622:88;2617:3;2613:98;2609:109;2602:116;;;2242:482;;;;:::o;2729:184::-;2781:77;2778:1;2771:88;2878:4;2875:1;2868:15;2902:4;2899:1;2892:15;2918:1662;3173:4;3221:2;3210:9;3206:18;3251:2;3240:9;3233:21;3274:6;3309;3303:13;3340:6;3332;3325:22;3378:2;3367:9;3363:18;3356:25;;3440:2;3430:6;3427:1;3423:14;3412:9;3408:30;3404:39;3390:53;;3462:4;3501:2;3493:6;3489:15;3522:1;3532:314;3546:6;3543:1;3540:13;3532:314;;;3635:66;3623:9;3615:6;3611:22;3607:95;3602:3;3595:108;3726:40;3759:6;3750;3744:13;3726:40;:::i;:::-;3716:50;-1:-1:-1;3824:12:127;;;;3789:15;;;;3568:1;3561:9;3532:314;;;-1:-1:-1;;3882:22:127;;;3862:18;;;3855:50;3958:13;;3980:24;;;4062:15;;;;4022;;;-1:-1:-1;3958:13:127;-1:-1:-1;4097:1:127;4107:445;4123:8;4118:3;4115:17;4107:445;;;4194:8;4188:15;4233:2;4229;4226:10;4216:218;;4278:77;4275:1;4268:88;4383:4;4380:1;4373:15;4415:4;4412:1;4405:15;4216:218;4447:17;;4525;;;;4486:14;;;;4151:1;4142:11;4107:445;;;-1:-1:-1;4569:5:127;;2918:1662;-1:-1:-1;;;;;;;2918:1662:127:o;4777:184::-;4829:77;4826:1;4819:88;4926:4;4923:1;4916:15;4950:4;4947:1;4940:15;4966:334;5037:2;5031:9;5093:2;5083:13;;5098:66;5079:86;5067:99;;5196:18;5181:34;;5217:22;;;5178:62;5175:88;;;5243:18;;:::i;:::-;5279:2;5272:22;4966:334;;-1:-1:-1;4966:334:127:o;5305:589::-;5347:5;5400:3;5393:4;5385:6;5381:17;5377:27;5367:55;;5418:1;5415;5408:12;5367:55;5454:6;5441:20;5480:18;5476:2;5473:26;5470:52;;;5502:18;;:::i;:::-;5546:114;5654:4;5585:66;5578:4;5574:2;5570:13;5566:86;5562:97;5546:114;:::i;:::-;5685:2;5676:7;5669:19;5731:3;5724:4;5719:2;5711:6;5707:15;5703:26;5700:35;5697:55;;;5748:1;5745;5738:12;5697:55;5813:2;5806:4;5798:6;5794:17;5787:4;5778:7;5774:18;5761:55;5861:1;5836:16;;;5854:4;5832:27;5825:38;;;;5840:7;5305:589;-1:-1:-1;;;5305:589:127:o;5899:388::-;5976:6;5984;6037:2;6025:9;6016:7;6012:23;6008:32;6005:52;;;6053:1;6050;6043:12;6005:52;6089:9;6076:23;6066:33;;6150:2;6139:9;6135:18;6122:32;6177:18;6169:6;6166:30;6163:50;;;6209:1;6206;6199:12;6163:50;6232:49;6273:7;6264:6;6253:9;6249:22;6232:49;:::i;:::-;6222:59;;;5899:388;;;;;:::o;6474:320::-;6542:6;6595:2;6583:9;6574:7;6570:23;6566:32;6563:52;;;6611:1;6608;6601:12;6563:52;6651:9;6638:23;6684:18;6676:6;6673:30;6670:50;;;6716:1;6713;6706:12;6670:50;6739:49;6780:7;6771:6;6760:9;6756:22;6739:49;:::i;:::-;6729:59;6474:320;-1:-1:-1;;;;6474:320:127:o;6799:218::-;6946:2;6935:9;6928:21;6909:4;6966:45;7007:2;6996:9;6992:18;6984:6;6966:45;:::i;7022:243::-;7111:6;7164:2;7152:9;7143:7;7139:23;7135:32;7132:52;;;7180:1;7177;7170:12;7132:52;7203:56;7251:7;7240:9;7203:56;:::i;7270:114::-;7354:4;7347:5;7343:16;7336:5;7333:27;7323:55;;7374:1;7371;7364:12;7389:369;7475:6;7483;7491;7544:2;7532:9;7523:7;7519:23;7515:32;7512:52;;;7560:1;7557;7550:12;7512:52;7589:9;7583:16;7573:26;;7639:2;7628:9;7624:18;7618:25;7608:35;;7686:2;7675:9;7671:18;7665:25;7699:29;7722:5;7699:29;:::i;:::-;7747:5;7737:15;;;7389:369;;;;;:::o;7763:936::-;7858:6;7889:2;7932;7920:9;7911:7;7907:23;7903:32;7900:52;;;7948:1;7945;7938:12;7900:52;7981:9;7975:16;8010:18;8051:2;8043:6;8040:14;8037:34;;;8067:1;8064;8057:12;8037:34;8105:6;8094:9;8090:22;8080:32;;8150:7;8143:4;8139:2;8135:13;8131:27;8121:55;;8172:1;8169;8162:12;8121:55;8201:2;8195:9;8223:2;8219;8216:10;8213:36;;;8229:18;;:::i;:::-;8275:2;8272:1;8268:10;8258:20;;8298:28;8322:2;8318;8314:11;8298:28;:::i;:::-;8360:15;;;8430:11;;;8426:20;;;8391:12;;;;8458:19;;;8455:39;;;8490:1;8487;8480:12;8455:39;8514:11;;;;8534:135;8550:6;8545:3;8542:15;8534:135;;;8616:10;;8604:23;;8567:12;;;;8647;;;;8534:135;;;8688:5;7763:936;-1:-1:-1;;;;;;;;7763:936:127:o;8704:184::-;8756:77;8753:1;8746:88;8853:4;8850:1;8843:15;8877:4;8874:1;8867:15;9195:437;9274:1;9270:12;;;;9317;;;9338:61;;9392:4;9384:6;9380:17;9370:27;;9338:61;9445:2;9437:6;9434:14;9414:18;9411:38;9408:218;;9482:77;9479:1;9472:88;9583:4;9580:1;9573:15;9611:4;9608:1;9601:15;9637:277;9704:6;9757:2;9745:9;9736:7;9732:23;9728:32;9725:52;;;9773:1;9770;9763:12;9725:52;9805:9;9799:16;9858:5;9851:13;9844:21;9837:5;9834:32;9824:60;;9880:1;9877;9870:12;10044:898;10170:3;10199:1;10232:6;10226:13;10262:36;10288:9;10262:36;:::i;:::-;10317:1;10334:18;;;10361:191;;;;10566:1;10561:356;;;;10327:590;;10361:191;10409:66;10398:9;10394:82;10389:3;10382:95;10532:6;10525:14;10518:22;10510:6;10506:35;10501:3;10497:45;10490:52;;10361:191;;10561:356;10592:6;10589:1;10582:17;10622:4;10667:2;10664:1;10654:16;10692:1;10706:165;10720:6;10717:1;10714:13;10706:165;;;10798:14;;10785:11;;;10778:35;10841:16;;;;10735:10;;10706:165;;;10710:3;;;10900:6;10895:3;10891:16;10884:23;;10327:590;-1:-1:-1;10933:3:127;;10044:898;-1:-1:-1;;;;;;10044:898:127:o;10947:184::-;11017:6;11070:2;11058:9;11049:7;11045:23;11041:32;11038:52;;;11086:1;11083;11076:12;11038:52;-1:-1:-1;11109:16:127;;10947:184;-1:-1:-1;10947:184:127:o;11389:349::-;11428:3;11459:66;11452:5;11449:77;11446:257;;11559:77;11556:1;11549:88;11660:4;11657:1;11650:15;11688:4;11685:1;11678:15;11446:257;-1:-1:-1;11730:1:127;11719:13;;11389:349::o;11743:243::-;11800:6;11853:2;11841:9;11832:7;11828:23;11824:32;11821:52;;;11869:1;11866;11859:12;11821:52;11908:9;11895:23;11927:29;11950:5;11927:29;:::i;12322:289::-;12497:6;12486:9;12479:25;12540:2;12535;12524:9;12520:18;12513:30;12460:4;12560:45;12601:2;12590:9;12586:18;12578:6;12560:45;:::i;12616:544::-;12717:2;12712:3;12709:11;12706:448;;;12753:1;12778:5;12774:2;12767:17;12823:4;12819:2;12809:19;12893:2;12881:10;12877:19;12874:1;12870:27;12864:4;12860:38;12929:4;12917:10;12914:20;12911:47;;;-1:-1:-1;12952:4:127;12911:47;13007:2;13002:3;12998:12;12995:1;12991:20;12985:4;12981:31;12971:41;;13062:82;13080:2;13073:5;13070:13;13062:82;;;13125:17;;;13106:1;13095:13;13062:82;;13396:1467;13520:3;13514:10;13547:18;13539:6;13536:30;13533:56;;;13569:18;;:::i;:::-;13598:96;13687:6;13647:38;13679:4;13673:11;13647:38;:::i;:::-;13641:4;13598:96;:::i;:::-;13749:4;;13813:2;13802:14;;13830:1;13825:781;;;;14650:1;14667:6;14664:89;;;-1:-1:-1;14719:19:127;;;14713:26;14664:89;13302:66;13293:1;13289:11;;;13285:84;13281:89;13271:100;13377:1;13373:11;;;13268:117;14766:81;;13795:1062;;13825:781;9991:1;9984:14;;;10028:4;10015:18;;13873:66;13861:79;;;14037:236;14051:7;14048:1;14045:14;14037:236;;;14140:19;;;14134:26;14119:42;;14232:27;;;;14200:1;14188:14;;;;14067:19;;14037:236;;;14041:3;14301:6;14292:7;14289:19;14286:261;;;14362:19;;;14356:26;14463:66;14445:1;14441:14;;;14457:3;14437:24;14433:97;14429:102;14414:118;14399:134;;14286:261;-1:-1:-1;;;;;14593:1:127;14577:14;;;14573:22;14560:36;;-1:-1:-1;13396:1467:127:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue((uint256,uint256,uint8))": "d7435693",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue(uint256)": "0ff4c916",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set(uint256,(uint256,uint256,uint8))": "66c52bed",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"turnsLeft\",\"type\":\"uint8\"}],\"internalType\":\"struct MatchType\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"turnsLeft\",\"type\":\"uint8\"}],\"internalType\":\"struct MatchType\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"indexer\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"turnsLeft\",\"type\":\"uint8\"}],\"internalType\":\"struct MatchType\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getEntitiesWithValue(bytes)\":{\"params\":{\"value\":\"Abi-encoded value to get the list of entities with this value for.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerIndexer(address)\":{\"params\":{\"indexer\":\"Address of the indexer to notify when a component value is set.\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Get a list of all entities that have a value in this component.\"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Get a list of all entities that have the specified value in this component.\"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Register a new indexer that gets notified when a component value is set.\"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"notice\":\"You can deploy this contract as ID for a system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/MatchComponent.sol\":\"MatchComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@latticexyz/=../../node_modules/@latticexyz/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":components/=src/components/\",\":ds-test/=../../node_modules/ds-test/src/\",\":forge-std/=../../node_modules/forge-std/src/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/Component.sol\":{\"keccak256\":\"0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a\",\"dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x44e1afa8b4b2132122255943deb1ba8787693cd5893876a06643deed3052b859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3761f562ad1a9fae0abf914e4e15592fb8b7dd231039448d20ad7dcfabf6de41\",\"dweb:/ipfs/QmbLN1mfNXYyrc4qxQauvBYTyJu9nR18t9xb54GY8xP3T7\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IEntityContainer.sol\":{\"keccak256\":\"0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10\",\"dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IEntityIndexer.sol\":{\"keccak256\":\"0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4\",\"dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@latticexyz/std-contracts/src/components/CoordComponent.sol\":{\"keccak256\":\"0x076812741d788656d0327c5a11f07b0de3671fdb4916952219020a384c49b340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a63fb3070ab7ef116a2018ad53eab2ceea28f55d35de7825196229bf3e20e96\",\"dweb:/ipfs/QmZ2ejiABUb4PSxozDE3DP4w6T8EGFt64CHEuKeU6VGqkL\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/MatchComponent.sol\":{\"keccak256\":\"0x148432e03b3a0b9c5bab72485e985c7355acd5ae8cfc40fccf25250a7bd5fa27\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6a23728ac9f784686c23679099326412bd9589a0b0cb3457d46d8daafa28f5a8\",\"dweb:/ipfs/QmTNPpwQLLUBerymVMtYSWPoLuPqF8whj88LpqXckcZiQr\"]},\"src/libraries/MSTypes.sol\":{\"keccak256\":\"0x97fc43180756413cbf00dca8acc421da68fb1cc4bbdc9a9d5564f01fb23ef01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3d44955ac3a0700c790c75c04359b45145515b92f46db4ba9a74fc872f2a10\",\"dweb:/ipfs/QmNyA5ZBksd5FaZoZVKQEo1NSFJg3UPE3P1s71NSh9JLqe\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MatchType",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finishedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "turnsLeft",
                  "type": "uint8"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct MatchType",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finishedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "turnsLeft",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "indexer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "struct MatchType",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finishedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "turnsLeft",
                  "type": "uint8"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getEntitiesWithValue(bytes)": {
            "params": {
              "value": "Abi-encoded value to get the list of entities with this value for."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerIndexer(address)": {
            "params": {
              "indexer": "Address of the indexer to notify when a component value is set."
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Get a list of all entities that have a value in this component."
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Get a list of all entities that have the specified value in this component."
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Register a new indexer that gets notified when a component value is set."
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":components/=src/components/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/MatchComponent.sol": "MatchComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Component.sol": {
        "keccak256": "0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874",
        "urls": [
          "bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a",
          "dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x44e1afa8b4b2132122255943deb1ba8787693cd5893876a06643deed3052b859",
        "urls": [
          "bzz-raw://3761f562ad1a9fae0abf914e4e15592fb8b7dd231039448d20ad7dcfabf6de41",
          "dweb:/ipfs/QmbLN1mfNXYyrc4qxQauvBYTyJu9nR18t9xb54GY8xP3T7"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IEntityContainer.sol": {
        "keccak256": "0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8",
        "urls": [
          "bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10",
          "dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IEntityIndexer.sol": {
        "keccak256": "0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5",
        "urls": [
          "bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4",
          "dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/std-contracts/src/components/CoordComponent.sol": {
        "keccak256": "0x076812741d788656d0327c5a11f07b0de3671fdb4916952219020a384c49b340",
        "urls": [
          "bzz-raw://0a63fb3070ab7ef116a2018ad53eab2ceea28f55d35de7825196229bf3e20e96",
          "dweb:/ipfs/QmZ2ejiABUb4PSxozDE3DP4w6T8EGFt64CHEuKeU6VGqkL"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/MatchComponent.sol": {
        "keccak256": "0x148432e03b3a0b9c5bab72485e985c7355acd5ae8cfc40fccf25250a7bd5fa27",
        "urls": [
          "bzz-raw://6a23728ac9f784686c23679099326412bd9589a0b0cb3457d46d8daafa28f5a8",
          "dweb:/ipfs/QmTNPpwQLLUBerymVMtYSWPoLuPqF8whj88LpqXckcZiQr"
        ],
        "license": "Unlicense"
      },
      "src/libraries/MSTypes.sol": {
        "keccak256": "0x97fc43180756413cbf00dca8acc421da68fb1cc4bbdc9a9d5564f01fb23ef01c",
        "urls": [
          "bzz-raw://9a3d44955ac3a0700c790c75c04359b45145515b92f46db4ba9a74fc872f2a10",
          "dweb:/ipfs/QmNyA5ZBksd5FaZoZVKQEo1NSFJg3UPE3P1s71NSh9JLqe"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/MatchComponent.sol",
    "id": 43097,
    "exportedSymbols": {
      "BareComponent": [
        44984
      ],
      "Component": [
        262
      ],
      "ID": [
        42925
      ],
      "IEntityIndexer": [
        45401
      ],
      "IWorld": [
        2474
      ],
      "LibTypes": [
        45023
      ],
      "MapSet": [
        45216
      ],
      "MatchComponent": [
        43096
      ],
      "MatchType": [
        43861
      ],
      "Set": [
        45382
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:1534:105",
    "nodes": [
      {
        "id": 42914,
        "nodeType": "PragmaDirective",
        "src": "38:24:105",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 42915,
        "nodeType": "ImportDirective",
        "src": "64:30:105",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/Component.sol",
        "file": "solecs/Component.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43097,
        "sourceUnit": 263,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42917,
        "nodeType": "ImportDirective",
        "src": "96:51:105",
        "nodes": [],
        "absolutePath": "src/libraries/MSTypes.sol",
        "file": "../libraries/MSTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43097,
        "sourceUnit": 43862,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42916,
              "name": "MatchType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43861,
              "src": "104:9:105",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42925,
        "nodeType": "VariableDeclaration",
        "src": "149:63:105",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "166:2:105",
        "scope": 43097,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 42918,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "149:7:105",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e4d6174636854797065",
                  "id": 42922,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "189:21:105",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_0f9dd24bbd2f19675b3fca355a567814eafa262312f033a2e289b40d70c05588",
                    "typeString": "literal_string \"component.MatchType\""
                  },
                  "value": "component.MatchType"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_0f9dd24bbd2f19675b3fca355a567814eafa262312f033a2e289b40d70c05588",
                    "typeString": "literal_string \"component.MatchType\""
                  }
                ],
                "id": 42921,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "179:9:105",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 42923,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "179:32:105",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 42920,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "171:7:105",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 42919,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "171:7:105",
              "typeDescriptions": {}
            }
          },
          "id": 42924,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "171:41:105",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 43096,
        "nodeType": "ContractDefinition",
        "src": "274:1297:105",
        "nodes": [
          {
            "id": 42938,
            "nodeType": "FunctionDefinition",
            "src": "317:50:105",
            "nodes": [],
            "body": {
              "id": 42937,
              "nodeType": "Block",
              "src": "365:2:105",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42933,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42930,
                    "src": "354:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 42934,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42925,
                    "src": "361:2:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 42935,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 42932,
                  "name": "Component",
                  "nameLocations": [
                    "344:9:105"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "344:9:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "344:20:105"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 42931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42930,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "337:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 42938,
                  "src": "329:13:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "328:15:105"
            },
            "returnParameters": {
              "id": 42936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:0:105"
            },
            "scope": 43096,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43009,
            "nodeType": "FunctionDefinition",
            "src": "373:444:105",
            "nodes": [],
            "body": {
              "id": 43008,
              "nodeType": "Block",
              "src": "484:333:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42949,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42943,
                      "src": "494:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 42953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "514:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 42952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "501:12:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 42950,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "505:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 42951,
                          "nodeType": "ArrayTypeName",
                          "src": "505:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 42954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "501:15:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "494:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 42956,
                  "nodeType": "ExpressionStatement",
                  "src": "494:22:105"
                },
                {
                  "expression": {
                    "id": 42964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42957,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42947,
                      "src": "526:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 42962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "562:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 42961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "535:26:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$45022_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 42959,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 42958,
                              "name": "LibTypes.SchemaValue",
                              "nameLocations": [
                                "539:8:105",
                                "548:11:105"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 45022,
                              "src": "539:20:105"
                            },
                            "referencedDeclaration": 45022,
                            "src": "539:20:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$45022",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 42960,
                          "nodeType": "ArrayTypeName",
                          "src": "539:22:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 42963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "535:29:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "526:38:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 42965,
                  "nodeType": "ExpressionStatement",
                  "src": "526:38:105"
                },
                {
                  "expression": {
                    "id": 42970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42966,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42943,
                        "src": "575:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 42968,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 42967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "580:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "575:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "737461727465644174",
                      "id": 42969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "585:11:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e9c1a778d4e3a821771bad5b861aaca2a112ccc4bcf04a25eb9898f1ce1b0758",
                        "typeString": "literal_string \"startedAt\""
                      },
                      "value": "startedAt"
                    },
                    "src": "575:21:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 42971,
                  "nodeType": "ExpressionStatement",
                  "src": "575:21:105"
                },
                {
                  "expression": {
                    "id": 42978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42972,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42947,
                        "src": "606:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 42974,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 42973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "613:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "606:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$45022",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 42975,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45023,
                          "src": "618:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$45023_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 42976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "627:11:105",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45022,
                        "src": "618:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$45022_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 42977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "639:7:105",
                      "memberName": "UINT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45001,
                      "src": "618:28:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$45022",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "606:40:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$45022",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 42979,
                  "nodeType": "ExpressionStatement",
                  "src": "606:40:105"
                },
                {
                  "expression": {
                    "id": 42984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42980,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42943,
                        "src": "657:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 42982,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 42981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "662:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "657:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66696e69736865644174",
                      "id": 42983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "667:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_87b380fab76d79f30e21e884eed6d6aabf62a9818d54032a42cb17c8e52ed2e4",
                        "typeString": "literal_string \"finishedAt\""
                      },
                      "value": "finishedAt"
                    },
                    "src": "657:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 42985,
                  "nodeType": "ExpressionStatement",
                  "src": "657:22:105"
                },
                {
                  "expression": {
                    "id": 42992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42986,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42947,
                        "src": "689:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 42988,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 42987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "696:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "689:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$45022",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 42989,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45023,
                          "src": "701:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$45023_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 42990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "710:11:105",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45022,
                        "src": "701:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$45022_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 42991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "722:7:105",
                      "memberName": "UINT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45001,
                      "src": "701:28:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$45022",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "689:40:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$45022",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 42993,
                  "nodeType": "ExpressionStatement",
                  "src": "689:40:105"
                },
                {
                  "expression": {
                    "id": 42998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42994,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42943,
                        "src": "740:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 42996,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 42995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "745:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "740:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7475726e734c656674",
                      "id": 42997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "750:11:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b38e4ecb1df389460eee688af6b42de9f6d83f4755c8026b1430e59bcc18b88f",
                        "typeString": "literal_string \"turnsLeft\""
                      },
                      "value": "turnsLeft"
                    },
                    "src": "740:21:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 42999,
                  "nodeType": "ExpressionStatement",
                  "src": "740:21:105"
                },
                {
                  "expression": {
                    "id": 43006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43000,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42947,
                        "src": "771:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 43002,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 43001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "778:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "771:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$45022",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 43003,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45023,
                          "src": "783:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$45023_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 43004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "792:11:105",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45022,
                        "src": "783:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$45022_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 43005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "804:6:105",
                      "memberName": "UINT32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44998,
                      "src": "783:27:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$45022",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "771:39:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$45022",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 43007,
                  "nodeType": "ExpressionStatement",
                  "src": "771:39:105"
                }
              ]
            },
            "baseFunctions": [
              2281
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "382:9:105",
            "overrides": {
              "id": 42940,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "406:8:105"
            },
            "parameters": {
              "id": 42939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:2:105"
            },
            "returnParameters": {
              "id": 42948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42943,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "440:4:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 43009,
                  "src": "424:20:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42941,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "424:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 42942,
                    "nodeType": "ArrayTypeName",
                    "src": "424:8:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42947,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "476:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 43009,
                  "src": "446:36:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42945,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42944,
                        "name": "LibTypes.SchemaValue",
                        "nameLocations": [
                          "446:8:105",
                          "455:11:105"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 45022,
                        "src": "446:20:105"
                      },
                      "referencedDeclaration": 45022,
                      "src": "446:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$45022",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 42946,
                    "nodeType": "ArrayTypeName",
                    "src": "446:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$45022_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "423:60:105"
            },
            "scope": 43096,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43025,
            "nodeType": "FunctionDefinition",
            "src": "823:113:105",
            "nodes": [],
            "body": {
              "id": 43024,
              "nodeType": "Block",
              "src": "886:50:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43018,
                        "name": "entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43011,
                        "src": "900:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43020,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43014,
                            "src": "921:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                              "typeString": "struct MatchType calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                              "typeString": "struct MatchType calldata"
                            }
                          ],
                          "id": 43019,
                          "name": "encodedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43095,
                          "src": "908:12:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_MatchType_$43861_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct MatchType calldata) pure returns (bytes memory)"
                          }
                        },
                        "id": 43021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "908:20:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 43017,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        43025,
                        44859
                      ],
                      "referencedDeclaration": 44859,
                      "src": "896:3:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 43022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "896:33:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43023,
                  "nodeType": "ExpressionStatement",
                  "src": "896:33:105"
                }
              ]
            },
            "functionSelector": "66c52bed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "832:3:105",
            "parameters": {
              "id": 43015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43011,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "844:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 43025,
                  "src": "836:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43014,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "871:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 43025,
                  "src": "852:25:105",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                    "typeString": "struct MatchType"
                  },
                  "typeName": {
                    "id": 43013,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43012,
                      "name": "MatchType",
                      "nameLocations": [
                        "852:9:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43861,
                      "src": "852:9:105"
                    },
                    "referencedDeclaration": 43861,
                    "src": "852:9:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$43861_storage_ptr",
                      "typeString": "struct MatchType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:43:105"
            },
            "returnParameters": {
              "id": 43016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:0:105"
            },
            "scope": 43096,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43060,
            "nodeType": "FunctionDefinition",
            "src": "942:279:105",
            "nodes": [],
            "body": {
              "id": 43059,
              "nodeType": "Block",
              "src": "1015:206:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43034,
                    43036,
                    43038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43034,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nameLocation": "1034:9:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 43059,
                      "src": "1026:17:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43033,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1026:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43036,
                      "mutability": "mutable",
                      "name": "finishedAt",
                      "nameLocation": "1053:10:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 43059,
                      "src": "1045:18:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43035,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1045:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43038,
                      "mutability": "mutable",
                      "name": "turnsLeft",
                      "nameLocation": "1071:9:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 43059,
                      "src": "1065:15:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 43037,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1065:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43052,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43042,
                            "name": "entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43027,
                            "src": "1119:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 43041,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44904,
                          "src": "1107:11:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 43043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1107:19:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 43045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1129:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 43044,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1129:7:105",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 43047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1138:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 43046,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1138:7:105",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 43049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1147:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 43048,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1147:5:105",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 43050,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1128:25:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint8_$_$",
                          "typeString": "tuple(type(uint256),type(uint256),type(uint8))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint8_$_$",
                          "typeString": "tuple(type(uint256),type(uint256),type(uint8))"
                        }
                      ],
                      "expression": {
                        "id": 43039,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1096:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 43040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1100:6:105",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1096:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 43051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1096:58:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint8_$",
                      "typeString": "tuple(uint256,uint256,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1025:129:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43054,
                        "name": "startedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43034,
                        "src": "1181:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 43055,
                        "name": "finishedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43036,
                        "src": "1192:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 43056,
                        "name": "turnsLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43038,
                        "src": "1204:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 43053,
                      "name": "MatchType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43861,
                      "src": "1171:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_MatchType_$43861_storage_ptr_$",
                        "typeString": "type(struct MatchType storage pointer)"
                      }
                    },
                    "id": 43057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:43:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$43861_memory_ptr",
                      "typeString": "struct MatchType memory"
                    }
                  },
                  "functionReturnParameters": 43032,
                  "id": 43058,
                  "nodeType": "Return",
                  "src": "1164:50:105"
                }
              ]
            },
            "functionSelector": "0ff4c916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "951:8:105",
            "parameters": {
              "id": 43028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43027,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "968:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 43060,
                  "src": "960:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "959:16:105"
            },
            "returnParameters": {
              "id": 43032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43060,
                  "src": "997:16:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchType_$43861_memory_ptr",
                    "typeString": "struct MatchType"
                  },
                  "typeName": {
                    "id": 43030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43029,
                      "name": "MatchType",
                      "nameLocations": [
                        "997:9:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43861,
                      "src": "997:9:105"
                    },
                    "referencedDeclaration": 43861,
                    "src": "997:9:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$43861_storage_ptr",
                      "typeString": "struct MatchType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "996:18:105"
            },
            "scope": 43096,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43076,
            "nodeType": "FunctionDefinition",
            "src": "1227:162:105",
            "nodes": [],
            "body": {
              "id": 43075,
              "nodeType": "Block",
              "src": "1323:66:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43071,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43063,
                            "src": "1374:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                              "typeString": "struct MatchType calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                              "typeString": "struct MatchType calldata"
                            }
                          ],
                          "id": 43070,
                          "name": "encodedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43095,
                          "src": "1361:12:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_MatchType_$43861_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct MatchType calldata) pure returns (bytes memory)"
                          }
                        },
                        "id": 43072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1361:20:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 43069,
                      "name": "getEntitiesWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        43076,
                        104
                      ],
                      "referencedDeclaration": 104,
                      "src": "1340:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (uint256[] memory)"
                      }
                    },
                    "id": 43073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:42:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 43068,
                  "id": 43074,
                  "nodeType": "Return",
                  "src": "1333:49:105"
                }
              ]
            },
            "functionSelector": "d7435693",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitiesWithValue",
            "nameLocation": "1236:20:105",
            "parameters": {
              "id": 43064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43063,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1276:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 43076,
                  "src": "1257:25:105",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                    "typeString": "struct MatchType"
                  },
                  "typeName": {
                    "id": 43062,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43061,
                      "name": "MatchType",
                      "nameLocations": [
                        "1257:9:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43861,
                      "src": "1257:9:105"
                    },
                    "referencedDeclaration": 43861,
                    "src": "1257:9:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$43861_storage_ptr",
                      "typeString": "struct MatchType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1256:27:105"
            },
            "returnParameters": {
              "id": 43068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43076,
                  "src": "1305:16:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43065,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1305:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 43066,
                    "nodeType": "ArrayTypeName",
                    "src": "1305:9:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:18:105"
            },
            "scope": 43096,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43095,
            "nodeType": "FunctionDefinition",
            "src": "1395:174:105",
            "nodes": [],
            "body": {
              "id": 43094,
              "nodeType": "Block",
              "src": "1480:89:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43086,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43079,
                          "src": "1508:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                            "typeString": "struct MatchType calldata"
                          }
                        },
                        "id": 43087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1515:9:105",
                        "memberName": "startedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43856,
                        "src": "1508:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 43088,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43079,
                          "src": "1526:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                            "typeString": "struct MatchType calldata"
                          }
                        },
                        "id": 43089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1533:10:105",
                        "memberName": "finishedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43858,
                        "src": "1526:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 43090,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43079,
                          "src": "1545:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                            "typeString": "struct MatchType calldata"
                          }
                        },
                        "id": 43091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1552:9:105",
                        "memberName": "turnsLeft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43860,
                        "src": "1545:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 43084,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1497:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 43085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1501:6:105",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1497:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 43092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1497:65:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 43083,
                  "id": 43093,
                  "nodeType": "Return",
                  "src": "1490:72:105"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodedValue",
            "nameLocation": "1404:12:105",
            "parameters": {
              "id": 43080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43079,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1436:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 43095,
                  "src": "1417:25:105",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchType_$43861_calldata_ptr",
                    "typeString": "struct MatchType"
                  },
                  "typeName": {
                    "id": 43078,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43077,
                      "name": "MatchType",
                      "nameLocations": [
                        "1417:9:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43861,
                      "src": "1417:9:105"
                    },
                    "referencedDeclaration": 43861,
                    "src": "1417:9:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$43861_storage_ptr",
                      "typeString": "struct MatchType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1416:27:105"
            },
            "returnParameters": {
              "id": 43083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43095,
                  "src": "1466:12:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43081,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1465:14:105"
            },
            "scope": 43096,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42927,
              "name": "Component",
              "nameLocations": [
                "301:9:105"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 262,
              "src": "301:9:105"
            },
            "id": 42928,
            "nodeType": "InheritanceSpecifier",
            "src": "301:9:105"
          }
        ],
        "canonicalName": "MatchComponent",
        "contractDependencies": [
          45216,
          45382
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 42926,
          "nodeType": "StructuredDocumentation",
          "src": "215:59:105",
          "text": "@notice You can deploy this contract as ID for a system"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43096,
          262,
          44984,
          60248,
          45442,
          3300,
          45985,
          60287,
          45861,
          2332,
          45728,
          3343,
          45995
        ],
        "name": "MatchComponent",
        "nameLocation": "283:14:105",
        "scope": 43097,
        "usedErrors": [
          44784,
          60175,
          60284,
          60286
        ]
      }
    ],
    "license": "Unlicense"
  },
  "id": 105
}