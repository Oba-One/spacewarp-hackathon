{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finishedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "turnsLeft",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "moveCardLength",
              "type": "uint32"
            }
          ],
          "internalType": "struct MatchType",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finishedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "turnsLeft",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "moveCardLength",
              "type": "uint32"
            }
          ],
          "internalType": "struct MatchType",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "indexer",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finishedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "turnsLeft",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "moveCardLength",
              "type": "uint32"
            }
          ],
          "internalType": "struct MatchType",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620031de380380620031de8339810160408190526200003491620002b9565b807f0f9dd24bbd2f19675b3fca355a567814eafa262312f033a2e289b40d70c055888181620000633362000127565b60028190556001600160a01b03821615620000835762000083826200019b565b505060405162000093906200029d565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df90620002ab565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b039290921691909117905550620002eb915050565b60006200013e6200025360201b62000d8e1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b620001a562000277565b6001600160a01b0316336001600160a01b031614620001d757604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200023757600080fd5b505af11580156200024c573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60006200028e6200025360201b62000d8e1760201c565b546001600160a01b0316919050565b61084c806200210483390190565b61088e806200295083390190565b600060208284031215620002cc57600080fd5b81516001600160a01b0381168114620002e457600080fd5b9392505050565b611e0980620002fb6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638b282947116100cd578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e1461031a578063dcf663941461032d578063f2fde38b1461034057600080fd5b8063b8bc073d146102e7578063bf4fe57e1461030757600080fd5b80639d2c76b4116100b25780639d2c76b4146102aa578063af640d0f146102bd578063b361be46146102d457600080fd5b80638b2829471461028f5780638da5cb5b146102a257600080fd5b80634fef6a381161012457806375c0669c1161010957806375c0669c146102465780637a61f2b114610259578063861eb9051461026c57600080fd5b80634fef6a381461021d5780636b122fe01461023057600080fd5b80630ff4c9161461015657806330b67baa146101ae57806331b933b9146101f35780634cc8221514610208575b600080fd5b610169610164366004611569565b610353565b6040516101a59190815181526020808301519082015260408083015160ff169082015260609182015163ffffffff169181019190915260800190565b60405180910390f35b6000546101ce9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a5565b6101fb6103cc565b6040516101a59190611582565b61021b610216366004611569565b610487565b005b61021b61022b3660046115c6565b6104d2565b6102386105b0565b6040516101a5929190611696565b61021b6102543660046115c6565b610735565b61021b61026736600461179e565b6107eb565b61027f61027a3660046115c6565b6107fc565b60405190151581526020016101a5565b61021b61029d3660046118d7565b610887565b6101ce6108d0565b61021b6102b83660046115c6565b610910565b6102c660025481565b6040519081526020016101a5565b6101fb6102e236600461191e565b610a39565b6102fa6102f5366004611569565b610af6565b6040516101a5919061195b565b61021b6103153660046115c6565b610b98565b61027f610328366004611569565b610c73565b6101fb61033b36600461196e565b610d07565b61021b61034e3660046115c6565b610d15565b60408051608081018252600080825260208201819052918101829052606081018290529080808061038386610af6565b806020019051810190610396919061199c565b60408051608081018252948552602085019390935260ff9091169183019190915263ffffffff1660608201529695505050505050565b600354604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa15801561043c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261048291908101906119ed565b905090565b610490336107fc565b6104c6576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104cf81610db2565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610542576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160028082526060828101909352829190816020015b60608152602001906001900390816105c957505060408051600280825260608201835292945091906020830190803683370190505090506040518060400160405280600981526020017f67616d65426567696e00000000000000000000000000000000000000000000008152508260008151811061064957610649611a93565b6020026020010181905250600d8160008151811061066957610669611a93565b6020026020010190602181111561068257610682611667565b9081602181111561069557610695611667565b815250506040518060400160405280600e81526020017f6d6f7665436172644c656e677468000000000000000000000000000000000000815250826001815181106106e2576106e2611a93565b6020026020010181905250600a8160018151811061070257610702611a93565b6020026020010190602181111561071b5761071b611667565b9081602181111561072e5761072e611667565b9052509091565b61073e336107fc565b610774576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6107f88261029d83611071565b5050565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061088157506108526108d0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610890336107fc565b6108c6576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f882826110ba565b60006104827f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610980576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610a1e57600080fd5b505af1158015610a32573d6000803e3d6000fd5b5050505050565b60048054825160208401206040517f796c5e940000000000000000000000000000000000000000000000000000000081529283015260609173ffffffffffffffffffffffffffffffffffffffff9091169063796c5e9490602401600060405180830381865afa158015610ab0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261088191908101906119ed565b6000818152600160205260409020805460609190610b1390611ac2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3f90611ac2565b8015610b8c5780601f10610b6157610100808354040283529160200191610b8c565b820191906000526020600020905b815481529060010190602001808311610b6f57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c08576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6003546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108819190611b0f565b60606108816102e283611071565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d85576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104cf81611351565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea1391610def91611b31565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6a9190611bc5565b600003610e745750565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a91610eb191611b31565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b158015610f0c57600080fd5b505af1158015610f20573d6000803e3d6000fd5b50506003546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b158015610f9057600080fd5b505af1158015610fa4573d6000803e3d6000fd5b50505050610fb18161135a565b60005b6005548110156107f85760058181548110610fd157610fd1611a93565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561104657600080fd5b505af115801561105a573d6000803e3d6000fd5b50505050808061106990611bde565b915050610fb4565b6060813561108460808401848401611c3d565b6040516020016110a492919091825263ffffffff16602082015260400190565b6040516020818303038152906040529050919050565b6003546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561112657600080fd5b505af115801561113a573d6000803e3d6000fd5b505060045460008581526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a925061117b91611b31565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b1580156111d657600080fd5b505af11580156111ea573d6000803e3d6000fd5b505060048054845160208601206040517f771602f7000000000000000000000000000000000000000000000000000000008152928301526024820186905273ffffffffffffffffffffffffffffffffffffffff16925063771602f79150604401600060405180830381600087803b15801561126457600080fd5b505af1158015611278573d6000803e3d6000fd5b5050505061128682826113c8565b60005b60055481101561134c57600581815481106112a6576112a6611a93565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b838906113079086908690600401611c5a565b600060405180830381600087803b15801561132157600080fd5b505af1158015611335573d6000803e3d6000fd5b50505050808061134490611bde565b915050611289565b505050565b6104cf8161146f565b60008181526001602052604081206113719161151b565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610a04565b60008281526001602052604090206113e08282611cb9565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906114399085908590600401611c5a565b600060405180830381600087803b15801561145357600080fd5b505af1158015611467573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461152790611ac2565b6000825580601f10611537575050565b601f0160209004906000526020600020908101906104cf91905b808211156115655760008155600101611551565b5090565b60006020828403121561157b57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156115ba5783518352928401929184019160010161159e565b50909695505050505050565b6000602082840312156115d857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146115fc57600080fd5b9392505050565b6000815180845260005b818110156116295760208185018101518683018201520161160d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561170b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526116f9868351611603565b955093820193908201906001016116bf565b50508584038187015286518085528782019482019350915060005b8281101561177957845160228110611767577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611726565b5091979650505050505050565b60006080828403121561179857600080fd5b50919050565b60008060a083850312156117b157600080fd5b823591506117c28460208501611786565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611841576118416117cb565b604052919050565b600082601f83011261185a57600080fd5b813567ffffffffffffffff811115611874576118746117cb565b6118a560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016117fa565b8181528460208386010111156118ba57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156118ea57600080fd5b82359150602083013567ffffffffffffffff81111561190857600080fd5b61191485828601611849565b9150509250929050565b60006020828403121561193057600080fd5b813567ffffffffffffffff81111561194757600080fd5b61195384828501611849565b949350505050565b6020815260006115fc6020830184611603565b60006080828403121561198057600080fd5b6115fc8383611786565b63ffffffff811681146104cf57600080fd5b600080600080608085870312156119b257600080fd5b8451935060208501519250604085015160ff811681146119d157600080fd5b60608601519092506119e28161198a565b939692955090935050565b60006020808385031215611a0057600080fd5b825167ffffffffffffffff80821115611a1857600080fd5b818501915085601f830112611a2c57600080fd5b815181811115611a3e57611a3e6117cb565b8060051b9150611a4f8483016117fa565b8181529183018401918481019088841115611a6957600080fd5b938501935b83851015611a8757845182529385019390850190611a6e565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611ad657607f821691505b602082108103611798577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060208284031215611b2157600080fd5b815180151581146115fc57600080fd5b6000808354611b3f81611ac2565b60018281168015611b575760018114611b8a57611bb9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611bb9565b8760005260208060002060005b85811015611bb05781548a820152908401908201611b97565b50505082870194505b50929695505050505050565b600060208284031215611bd757600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600060208284031215611c4f57600080fd5b81356115fc8161198a565b8281526040602082015260006119536040830184611603565b601f82111561134c57600081815260208120601f850160051c81016020861015611c9a5750805b601f850160051c820191505b8181101561146757828155600101611ca6565b815167ffffffffffffffff811115611cd357611cd36117cb565b611ce781611ce18454611ac2565b84611c73565b602080601f831160018114611d3a5760008415611d045750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611467565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611d8757888601518255948401946001909101908401611d68565b5085821015611dc357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212206a9f8f88352b6a6a2d6692879f2484c8b08f576be6a47d339f36f506e932562364736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b6100b4565b600061003361009060201b6105431760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b610789806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e114610100578063949d225d1461012a578063cccf7a8e1461013b578063f2fde38b1461015e57600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461061b565b610171565b005b6100aa610233565b6040516100b79190610634565b60405180910390f35b6100a06100ce36600461061b565b61028b565b6100db6103ef565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b61011361010e36600461061b565b610434565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014e61014936600461061b565b610467565b60405190151581526020016100b7565b6100a061016c366004610678565b6104ca565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101e1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101ea81610467565b61023057600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561028157602002820191906000526020600020905b81548152602001906001019080831161026d575b5050505050905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146102fb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030481610467565b156102305760008054610319906001906106b5565b81548110610329576103296106f5565b9060005260206000200154600060016000848152602001908152602001600020548154811061035a5761035a6106f5565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610391576103916106f5565b9060005260206000200154815260200190815260200160002081905550600160008281526020019081526020016000206000905560008054806103d6576103d6610724565b6001900381819060005260206000200160009055905550565b600061042f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008061044083610467565b61044f57506000928392509050565b50506000908152600160208190526040909120549091565b60008054810361047957506000919050565b60008281526001602052604081205490036104b55781600080815481106104a2576104a26106f5565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461053a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61023081610567565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610230928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561062d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561066c57835183529284019291840191600101610650565b50909695505050505050565b60006020828403121561068a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106ae57600080fd5b9392505050565b818103818111156106ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220bbeea8d6f59efc4147403a73be9be68283baae4eb9d3afed514e245065d9f10964736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b6100b4565b600061003361009060201b6105691760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6107cb806100c36000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff81461012e578063f2fde38b1461015157600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610641565b610164565b005b6100956100a5366004610641565b610301565b6100bd6100b8366004610663565b6103b5565b6040516100ca919061067c565b60405180910390f35b6100f36100e1366004610663565b60009081526020819052604090205490565b6040519081526020016100ca565b610109610415565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ca565b61014161013c366004610641565b61045a565b60405190151581526020016100ca565b61009561015f3660046106c0565b6104ed565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101d4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101de828261045a565b156102fd57600082815260208190526040902080546101ff906001906106fd565b8154811061020f5761020f610737565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061024957610249610737565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061029757610297610737565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102e6576102e6610766565b600190038181906000526020600020016000905590555b5050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610371576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61037b828261045a565b6102fd5760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561040957602002820191906000526020600020905b8154815260200190600101908083116103f5575b50505050509050919050565b60006104557f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6000828152602081905260408120548103610477575060006104e7565b600083815260016020908152604080832085845290915281205490036104c957600083815260208190526040812080548492906104b6576104b6610737565b90600052602060002001541490506104e7565b50600082815260016020908152604080832084845290915290205415155b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461055d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105668161058d565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610566928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806040838503121561065457600080fd5b50508035926020909101359150565b60006020828403121561067557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156106b457835183529284019291840191600101610698565b50909695505050505050565b6000602082840312156106d257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106f657600080fd5b9392505050565b818103818111156104e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212208b4a661962415e1cc445fb385aff9d8faf81037c55889b64049e744d2fec655264736f6c63430008110033",
    "sourceMap": "326:1192:80:-:0;;;367:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;404:5;176:32;404:5;176:32;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;1107:9:1::1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1096:8:1::1;:20:::0;;-1:-1:-1;;;;;;1096:20:1::1;-1:-1:-1::0;;;;;1096:20:1;;;::::1;::::0;;;::::1;::::0;;1140:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1122:15:1::1;:30:::0;;-1:-1:-1;;;;;;1122:30:1::1;-1:-1:-1::0;;;;;1122:30:1;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;326:1192:80;;-1:-1:-1;;326:1192:80;1203:207:32;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:32;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:32;-1:-1:-1;;;;;1386:17:32;;;;;;;;;;1203:207::o;1302:137:0:-;436:8:32;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:32;:10;-1:-1:-1;;;;;422:22:32;;418:54;;453:19;;-1:-1:-1;;;453:19:32;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:94::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:94;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:33:-;186:49;;242:159::o;647:111:32:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:32;;647:111;-1:-1:-1;647:111:32:o;326:1192:80:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:290:94:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:94;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:94:o;309:274::-;326:1192:80;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c80638b282947116100cd578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e1461031a578063dcf663941461032d578063f2fde38b1461034057600080fd5b8063b8bc073d146102e7578063bf4fe57e1461030757600080fd5b80639d2c76b4116100b25780639d2c76b4146102aa578063af640d0f146102bd578063b361be46146102d457600080fd5b80638b2829471461028f5780638da5cb5b146102a257600080fd5b80634fef6a381161012457806375c0669c1161010957806375c0669c146102465780637a61f2b114610259578063861eb9051461026c57600080fd5b80634fef6a381461021d5780636b122fe01461023057600080fd5b80630ff4c9161461015657806330b67baa146101ae57806331b933b9146101f35780634cc8221514610208575b600080fd5b610169610164366004611569565b610353565b6040516101a59190815181526020808301519082015260408083015160ff169082015260609182015163ffffffff169181019190915260800190565b60405180910390f35b6000546101ce9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a5565b6101fb6103cc565b6040516101a59190611582565b61021b610216366004611569565b610487565b005b61021b61022b3660046115c6565b6104d2565b6102386105b0565b6040516101a5929190611696565b61021b6102543660046115c6565b610735565b61021b61026736600461179e565b6107eb565b61027f61027a3660046115c6565b6107fc565b60405190151581526020016101a5565b61021b61029d3660046118d7565b610887565b6101ce6108d0565b61021b6102b83660046115c6565b610910565b6102c660025481565b6040519081526020016101a5565b6101fb6102e236600461191e565b610a39565b6102fa6102f5366004611569565b610af6565b6040516101a5919061195b565b61021b6103153660046115c6565b610b98565b61027f610328366004611569565b610c73565b6101fb61033b36600461196e565b610d07565b61021b61034e3660046115c6565b610d15565b60408051608081018252600080825260208201819052918101829052606081018290529080808061038386610af6565b806020019051810190610396919061199c565b60408051608081018252948552602085019390935260ff9091169183019190915263ffffffff1660608201529695505050505050565b600354604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa15801561043c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261048291908101906119ed565b905090565b610490336107fc565b6104c6576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104cf81610db2565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610542576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160028082526060828101909352829190816020015b60608152602001906001900390816105c957505060408051600280825260608201835292945091906020830190803683370190505090506040518060400160405280600981526020017f67616d65426567696e00000000000000000000000000000000000000000000008152508260008151811061064957610649611a93565b6020026020010181905250600d8160008151811061066957610669611a93565b6020026020010190602181111561068257610682611667565b9081602181111561069557610695611667565b815250506040518060400160405280600e81526020017f6d6f7665436172644c656e677468000000000000000000000000000000000000815250826001815181106106e2576106e2611a93565b6020026020010181905250600a8160018151811061070257610702611a93565b6020026020010190602181111561071b5761071b611667565b9081602181111561072e5761072e611667565b9052509091565b61073e336107fc565b610774576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6107f88261029d83611071565b5050565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061088157506108526108d0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610890336107fc565b6108c6576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f882826110ba565b60006104827f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610980576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610a1e57600080fd5b505af1158015610a32573d6000803e3d6000fd5b5050505050565b60048054825160208401206040517f796c5e940000000000000000000000000000000000000000000000000000000081529283015260609173ffffffffffffffffffffffffffffffffffffffff9091169063796c5e9490602401600060405180830381865afa158015610ab0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261088191908101906119ed565b6000818152600160205260409020805460609190610b1390611ac2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3f90611ac2565b8015610b8c5780601f10610b6157610100808354040283529160200191610b8c565b820191906000526020600020905b815481529060010190602001808311610b6f57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c08576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6003546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108819190611b0f565b60606108816102e283611071565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d85576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104cf81611351565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea1391610def91611b31565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6a9190611bc5565b600003610e745750565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a91610eb191611b31565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b158015610f0c57600080fd5b505af1158015610f20573d6000803e3d6000fd5b50506003546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b158015610f9057600080fd5b505af1158015610fa4573d6000803e3d6000fd5b50505050610fb18161135a565b60005b6005548110156107f85760058181548110610fd157610fd1611a93565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561104657600080fd5b505af115801561105a573d6000803e3d6000fd5b50505050808061106990611bde565b915050610fb4565b6060813561108460808401848401611c3d565b6040516020016110a492919091825263ffffffff16602082015260400190565b6040516020818303038152906040529050919050565b6003546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561112657600080fd5b505af115801561113a573d6000803e3d6000fd5b505060045460008581526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a925061117b91611b31565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b1580156111d657600080fd5b505af11580156111ea573d6000803e3d6000fd5b505060048054845160208601206040517f771602f7000000000000000000000000000000000000000000000000000000008152928301526024820186905273ffffffffffffffffffffffffffffffffffffffff16925063771602f79150604401600060405180830381600087803b15801561126457600080fd5b505af1158015611278573d6000803e3d6000fd5b5050505061128682826113c8565b60005b60055481101561134c57600581815481106112a6576112a6611a93565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b838906113079086908690600401611c5a565b600060405180830381600087803b15801561132157600080fd5b505af1158015611335573d6000803e3d6000fd5b50505050808061134490611bde565b915050611289565b505050565b6104cf8161146f565b60008181526001602052604081206113719161151b565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610a04565b60008281526001602052604090206113e08282611cb9565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906114399085908590600401611c5a565b600060405180830381600087803b15801561145357600080fd5b505af1158015611467573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461152790611ac2565b6000825580601f10611537575050565b601f0160209004906000526020600020908101906104cf91905b808211156115655760008155600101611551565b5090565b60006020828403121561157b57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156115ba5783518352928401929184019160010161159e565b50909695505050505050565b6000602082840312156115d857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146115fc57600080fd5b9392505050565b6000815180845260005b818110156116295760208185018101518683018201520161160d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561170b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526116f9868351611603565b955093820193908201906001016116bf565b50508584038187015286518085528782019482019350915060005b8281101561177957845160228110611767577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611726565b5091979650505050505050565b60006080828403121561179857600080fd5b50919050565b60008060a083850312156117b157600080fd5b823591506117c28460208501611786565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611841576118416117cb565b604052919050565b600082601f83011261185a57600080fd5b813567ffffffffffffffff811115611874576118746117cb565b6118a560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016117fa565b8181528460208386010111156118ba57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156118ea57600080fd5b82359150602083013567ffffffffffffffff81111561190857600080fd5b61191485828601611849565b9150509250929050565b60006020828403121561193057600080fd5b813567ffffffffffffffff81111561194757600080fd5b61195384828501611849565b949350505050565b6020815260006115fc6020830184611603565b60006080828403121561198057600080fd5b6115fc8383611786565b63ffffffff811681146104cf57600080fd5b600080600080608085870312156119b257600080fd5b8451935060208501519250604085015160ff811681146119d157600080fd5b60608601519092506119e28161198a565b939692955090935050565b60006020808385031215611a0057600080fd5b825167ffffffffffffffff80821115611a1857600080fd5b818501915085601f830112611a2c57600080fd5b815181811115611a3e57611a3e6117cb565b8060051b9150611a4f8483016117fa565b8181529183018401918481019088841115611a6957600080fd5b938501935b83851015611a8757845182529385019390850190611a6e565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611ad657607f821691505b602082108103611798577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060208284031215611b2157600080fd5b815180151581146115fc57600080fd5b6000808354611b3f81611ac2565b60018281168015611b575760018114611b8a57611bb9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611bb9565b8760005260208060002060005b85811015611bb05781548a820152908401908201611b97565b50505082870194505b50929695505050505050565b600060208284031215611bd757600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600060208284031215611c4f57600080fd5b81356115fc8161198a565b8281526040602082015260006119536040830184611603565b601f82111561134c57600081815260208120601f850160051c81016020861015611c9a5750805b601f850160051c820191505b8181101561146757828155600101611ca6565b815167ffffffffffffffff811115611cd357611cd36117cb565b611ce781611ce18454611ac2565b84611c73565b602080601f831160018114611d3a5760008415611d045750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611467565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611d8757888601518255948401946001909101908401611d68565b5085821015611dc357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212206a9f8f88352b6a6a2d6692879f2484c8b08f576be6a47d339f36f506e932562364736f6c63430008110033",
    "sourceMap": "326:1192:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;876:322;;;;;;:::i;:::-;;:::i;:::-;;;;;;420:13:94;;402:32;;490:4;478:17;;;472:24;450:20;;;443:54;557:4;545:17;;;539:24;565:4;535:35;513:20;;;506:65;631:4;619:17;;;613:24;639:10;609:41;587:20;;;580:71;;;;389:3;374:19;;199:458;876:322:80;;;;;;;;870:20:0;;;;;;;;;;;;838:42:94;826:55;;;808:74;;796:2;781:18;870:20:0;662:226:94;1400:116:1;;;:::i;:::-;;;;;;;:::i;2088:85:0:-;;;;;;:::i;:::-;;:::i;:::-;;947:127:6;;;;;;:::i;:::-;;:::i;421:340:80:-;;;:::i;:::-;;;;;;;;:::i;2104:128:1:-;;;;;;:::i;:::-;;:::i;765:107:80:-;;;;;;:::i;:::-;;:::i;440:160:6:-;;;;;;:::i;:::-;;:::i;:::-;;;4832:14:94;;4825:22;4807:41;;4795:2;4780:18;440:160:6;4667:187:94;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:31:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;6520:25:94;;;6508:2;6493:18;1052:17:0;6374:177:94;1698:228:1;;;;;;:::i;:::-;;:::i;2623:171:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1228:129:6:-;;;;;;:::i;:::-;;:::i;1204:111:1:-;;;;;;:::i;:::-;;:::i;1202:156:80:-;;;;;;:::i;:::-;;:::i;514:113:31:-;;;;;;:::i;:::-;;:::i;876:322:80:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1055:19:80;1067:6;1055:11;:19::i;:::-;1037:84;;;;;;;;;;;;:::i;:::-;1134:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;876:322;-1:-1:-1;;;;;;876:322:80:o;1400:116:1:-;1492:8;;:19;;;;;;;;1461:16;;1492:8;;;:17;;:19;;;;;:8;;:19;;;;;;;:8;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1485:26;;1400:116;:::o;2088:85:0:-;708:23:6;720:10;708:11;:23::i;:::-;703:80;;748:28;;;;;;;;;;;;;;703:80;2153:15:0::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;947:127:6:-;186:49:33;722:29:32;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1011:51:6::1;;:43;:51:::0;;;238:53:7;1011:51:6::1;::::0;;;;:58;;;::::1;1065:4;1011:58;::::0;;947:127::o;421:340:80:-;545:15;;;558:1;545:15;;;472:20;545:15;;;;;;472:20;;545:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;575:29:80;;;602:1;575:29;;;;;;;;538:22;;-1:-1:-1;575:29:80;602:1;575:29;;;;;;;;;;-1:-1:-1;575:29:80;566:38;;611:21;;;;;;;;;;;;;;;;;:4;616:1;611:7;;;;;;;;:::i;:::-;;;;;;:21;;;;650:28;638:6;645:1;638:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;685:26;;;;;;;;;;;;;;;;;:4;690:1;685:7;;;;;;;;:::i;:::-;;;;;;:26;;;;729:27;717:6;724:1;717:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;421:340:80;;:::o;2104:128:1:-;708:23:6;720:10;708:11;:23::i;:::-;703:80;;748:28;;;;;;;;;;;;;;703:80;2189:8:1::1;:38:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2189:38:1;;;;;::::1;::::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2104:128::o;765:107:80:-;834:33;838:6;846:20;859:6;846:12;:20::i;834:33::-;765:107;;:::o;440:160:6:-;519:53;;;500:4;519:53;;;238::7;519::6;;;;;;;;;:76;;;588:7;:5;:7::i;:::-;576:19;;:8;:19;;;519:76;512:83;440:160;-1:-1:-1;;440:160:6:o;1736:106:0:-;708:23:6;720:10;708:11;:23::i;:::-;703:80;;748:28;;;;;;;;;;;;;;703:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;378:87:31:-:0;424:7;450:8;186:49:33;722:29:32;;;;647:111;1302:137:0;186:49:33;722:29:32;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;9316:74:94::0;9406:18;;;9399:34;;;;1384:31:0::1;::::0;9289:18:94;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;1698:228:1:-;1870:15;;;1903:16;;;;;;1870:51;;;;;;;;6520:25:94;1786:16:1;;1870:15;;;;;:24;;6493:18:94;;1870:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2623:171:0:-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1228:129:6:-;186:49:33;722:29:32;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1301:51:6::1;;:43;:51:::0;;;238:53:7;1301:51:6::1;::::0;;;;1294:58;;;::::1;::::0;;1228:129::o;1204:111:1:-;1290:8;;:20;;;;;;;;6520:25:94;;;1271:4:1;;1290:8;;;:12;;6493:18:94;;1290:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1202:156:80:-;1280:16;1311:42;1332:20;1345:6;1332:12;:20::i;514:113:31:-;186:49:33;722:29:32;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:31::1;612:7;593:18;:27::i;242:159:33:-:0;186:49;;242:159::o;2905:591:1:-;3027:15;;;3066:21;;;3027:15;3066:21;;;;;;;3056:32;;3027:15;;;;;:20;;3056:32;;;:::i;:::-;;;;;;;;;3027:63;;;;;;;;;;;6520:25:94;6493:18;;3027:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3094:1;3027:68;3023:81;;2905:591;:::o;3023:81::-;3160:15;;;3201:21;;;3160:15;3201:21;;;;;;;3191:32;;3160:15;;;;;:22;;3191:32;;;:::i;:::-;;;;;;;;;3160:73;;;;;;;;;;;11559:25:94;11600:18;;;11593:34;;;11532:18;;3160:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3286:8:1;;:23;;;;;;;;6520:25:94;;;3286:8:1;;;;;-1:-1:-1;3286:15:1;;-1:-1:-1;6493:18:94;;3286:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:21;3391:6;3377:13;:21::i;:::-;3410:9;3405:87;3429:8;:15;3425:19;;3405:87;;;3459:8;3468:1;3459:11;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;;;;;;6520:25:94;;;3459:11:1;;;;;:18;;6493::94;;3459:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3446:3;;;;;:::i;:::-;;;;3405:87;;1362:154:80;1433:12;1471:16;;1489:21;;;;;;;;:::i;:::-;1460:51;;;;;;;;12414:25:94;;;12487:10;12475:23;12470:2;12455:18;;12448:51;12402:2;12387:18;;12242:263;1460:51:80;;;;;;;;;;;;;1453:58;;1362:154;;;:::o;2279:579:1:-;2385:8;;:20;;;;;;;;6520:25:94;;;2385:8:1;;;;;:12;;6493:18:94;;2385:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2487:15:1;;;2528:21;;;2487:15;2528:21;;;;;;;2518:32;;2487:15;;;;;-1:-1:-1;2487:22:1;;-1:-1:-1;2518:32:1;;;:::i;:::-;;;;;;;;;2487:73;;;;;;;;;;;11559:25:94;11600:18;;;11593:34;;;11532:18;;2487:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2616:15:1;;;2644:16;;;;;;2616:54;;;;;;;;11559:25:94;11600:18;;;11593:34;;;2616:15:1;;;-1:-1:-1;2616:19:1;;-1:-1:-1;11532:18:94;;2616:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2728:25;2739:6;2747:5;2728:10;:25::i;:::-;2765:9;2760:94;2784:8;:15;2780:19;;2760:94;;;2814:8;2823:1;2814:11;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;;;:11;;;;;:18;;:33;;2833:6;;2841:5;;2814:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:3;;;;;:::i;:::-;;;;2760:94;;;;2279:579;;:::o;1100:97:32:-;1172:18;1182:7;1172:9;:18::i;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;6520:25:94;;;4366:5:0;;;;;4359:43;;6493:18:94;;4359:51:0;6374:177:94;3672:226:0;3778:21;;;;:13;:21;;;;;:29;3802:5;3778:21;:29;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1203:207:32:-;186:49:33;1359:7:32;;1338:38;;;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:94:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:94;;14:180;-1:-1:-1;14:180:94:o;893:632::-;1064:2;1116:21;;;1186:13;;1089:18;;;1208:22;;;1035:4;;1064:2;1287:15;;;;1261:2;1246:18;;;1035:4;1330:169;1344:6;1341:1;1338:13;1330:169;;;1405:13;;1393:26;;1474:15;;;;1439:12;;;;1366:1;1359:9;1330:169;;;-1:-1:-1;1516:3:94;;893:632;-1:-1:-1;;;;;;893:632:94:o;1530:309::-;1589:6;1642:2;1630:9;1621:7;1617:23;1613:32;1610:52;;;1658:1;1655;1648:12;1610:52;1697:9;1684:23;1747:42;1740:5;1736:54;1729:5;1726:65;1716:93;;1805:1;1802;1795:12;1716:93;1828:5;1530:309;-1:-1:-1;;;1530:309:94:o;1844:482::-;1886:3;1924:5;1918:12;1951:6;1946:3;1939:19;1976:1;1986:162;2000:6;1997:1;1994:13;1986:162;;;2062:4;2118:13;;;2114:22;;2108:29;2090:11;;;2086:20;;2079:59;2015:12;1986:162;;;1990:3;2193:1;2186:4;2177:6;2172:3;2168:16;2164:27;2157:38;2315:4;2245:66;2240:2;2232:6;2228:15;2224:88;2219:3;2215:98;2211:109;2204:116;;;1844:482;;;;:::o;2331:184::-;2383:77;2380:1;2373:88;2480:4;2477:1;2470:15;2504:4;2501:1;2494:15;2520:1662;2775:4;2823:2;2812:9;2808:18;2853:2;2842:9;2835:21;2876:6;2911;2905:13;2942:6;2934;2927:22;2980:2;2969:9;2965:18;2958:25;;3042:2;3032:6;3029:1;3025:14;3014:9;3010:30;3006:39;2992:53;;3064:4;3103:2;3095:6;3091:15;3124:1;3134:314;3148:6;3145:1;3142:13;3134:314;;;3237:66;3225:9;3217:6;3213:22;3209:95;3204:3;3197:108;3328:40;3361:6;3352;3346:13;3328:40;:::i;:::-;3318:50;-1:-1:-1;3426:12:94;;;;3391:15;;;;3170:1;3163:9;3134:314;;;-1:-1:-1;;3484:22:94;;;3464:18;;;3457:50;3560:13;;3582:24;;;3664:15;;;;3624;;;-1:-1:-1;3560:13:94;-1:-1:-1;3699:1:94;3709:445;3725:8;3720:3;3717:17;3709:445;;;3796:8;3790:15;3835:2;3831;3828:10;3818:218;;3880:77;3877:1;3870:88;3985:4;3982:1;3975:15;4017:4;4014:1;4007:15;3818:218;4049:17;;4127;;;;4088:14;;;;3753:1;3744:11;3709:445;;;-1:-1:-1;4171:5:94;;2520:1662;-1:-1:-1;;;;;;;2520:1662:94:o;4187:158::-;4249:5;4294:3;4285:6;4280:3;4276:16;4272:26;4269:46;;;4311:1;4308;4301:12;4269:46;-1:-1:-1;4333:6:94;4187:158;-1:-1:-1;4187:158:94:o;4350:312::-;4448:6;4456;4509:3;4497:9;4488:7;4484:23;4480:33;4477:53;;;4526:1;4523;4516:12;4477:53;4562:9;4549:23;4539:33;;4591:65;4648:7;4643:2;4632:9;4628:18;4591:65;:::i;:::-;4581:75;;4350:312;;;;;:::o;4859:184::-;4911:77;4908:1;4901:88;5008:4;5005:1;4998:15;5032:4;5029:1;5022:15;5048:334;5119:2;5113:9;5175:2;5165:13;;5180:66;5161:86;5149:99;;5278:18;5263:34;;5299:22;;;5260:62;5257:88;;;5325:18;;:::i;:::-;5361:2;5354:22;5048:334;;-1:-1:-1;5048:334:94:o;5387:589::-;5429:5;5482:3;5475:4;5467:6;5463:17;5459:27;5449:55;;5500:1;5497;5490:12;5449:55;5536:6;5523:20;5562:18;5558:2;5555:26;5552:52;;;5584:18;;:::i;:::-;5628:114;5736:4;5667:66;5660:4;5656:2;5652:13;5648:86;5644:97;5628:114;:::i;:::-;5767:2;5758:7;5751:19;5813:3;5806:4;5801:2;5793:6;5789:15;5785:26;5782:35;5779:55;;;5830:1;5827;5820:12;5779:55;5895:2;5888:4;5880:6;5876:17;5869:4;5860:7;5856:18;5843:55;5943:1;5918:16;;;5936:4;5914:27;5907:38;;;;5922:7;5387:589;-1:-1:-1;;;5387:589:94:o;5981:388::-;6058:6;6066;6119:2;6107:9;6098:7;6094:23;6090:32;6087:52;;;6135:1;6132;6125:12;6087:52;6171:9;6158:23;6148:33;;6232:2;6221:9;6217:18;6204:32;6259:18;6251:6;6248:30;6245:50;;;6291:1;6288;6281:12;6245:50;6314:49;6355:7;6346:6;6335:9;6331:22;6314:49;:::i;:::-;6304:59;;;5981:388;;;;;:::o;6556:320::-;6624:6;6677:2;6665:9;6656:7;6652:23;6648:32;6645:52;;;6693:1;6690;6683:12;6645:52;6733:9;6720:23;6766:18;6758:6;6755:30;6752:50;;;6798:1;6795;6788:12;6752:50;6821:49;6862:7;6853:6;6842:9;6838:22;6821:49;:::i;:::-;6811:59;6556:320;-1:-1:-1;;;;6556:320:94:o;6881:218::-;7028:2;7017:9;7010:21;6991:4;7048:45;7089:2;7078:9;7074:18;7066:6;7048:45;:::i;7104:244::-;7193:6;7246:3;7234:9;7225:7;7221:23;7217:33;7214:53;;;7263:1;7260;7253:12;7214:53;7286:56;7334:7;7323:9;7286:56;:::i;7353:121::-;7438:10;7431:5;7427:22;7420:5;7417:33;7407:61;;7464:1;7461;7454:12;7479:528;7573:6;7581;7589;7597;7650:3;7638:9;7629:7;7625:23;7621:33;7618:53;;;7667:1;7664;7657:12;7618:53;7696:9;7690:16;7680:26;;7746:2;7735:9;7731:18;7725:25;7715:35;;7793:2;7782:9;7778:18;7772:25;7837:4;7830:5;7826:16;7819:5;7816:27;7806:55;;7857:1;7854;7847:12;7806:55;7930:2;7915:18;;7909:25;7880:5;;-1:-1:-1;7943:32:94;7909:25;7943:32;:::i;:::-;7479:528;;;;-1:-1:-1;7479:528:94;;-1:-1:-1;;7479:528:94:o;8012:936::-;8107:6;8138:2;8181;8169:9;8160:7;8156:23;8152:32;8149:52;;;8197:1;8194;8187:12;8149:52;8230:9;8224:16;8259:18;8300:2;8292:6;8289:14;8286:34;;;8316:1;8313;8306:12;8286:34;8354:6;8343:9;8339:22;8329:32;;8399:7;8392:4;8388:2;8384:13;8380:27;8370:55;;8421:1;8418;8411:12;8370:55;8450:2;8444:9;8472:2;8468;8465:10;8462:36;;;8478:18;;:::i;:::-;8524:2;8521:1;8517:10;8507:20;;8547:28;8571:2;8567;8563:11;8547:28;:::i;:::-;8609:15;;;8679:11;;;8675:20;;;8640:12;;;;8707:19;;;8704:39;;;8739:1;8736;8729:12;8704:39;8763:11;;;;8783:135;8799:6;8794:3;8791:15;8783:135;;;8865:10;;8853:23;;8816:12;;;;8896;;;;8783:135;;;8937:5;8012:936;-1:-1:-1;;;;;;;;8012:936:94:o;8953:184::-;9005:77;9002:1;8995:88;9102:4;9099:1;9092:15;9126:4;9123:1;9116:15;9444:437;9523:1;9519:12;;;;9566;;;9587:61;;9641:4;9633:6;9629:17;9619:27;;9587:61;9694:2;9686:6;9683:14;9663:18;9660:38;9657:218;;9731:77;9728:1;9721:88;9832:4;9829:1;9822:15;9860:4;9857:1;9850:15;9886:277;9953:6;10006:2;9994:9;9985:7;9981:23;9977:32;9974:52;;;10022:1;10019;10012:12;9974:52;10054:9;10048:16;10107:5;10100:13;10093:21;10086:5;10083:32;10073:60;;10129:1;10126;10119:12;10293:898;10419:3;10448:1;10481:6;10475:13;10511:36;10537:9;10511:36;:::i;:::-;10566:1;10583:18;;;10610:191;;;;10815:1;10810:356;;;;10576:590;;10610:191;10658:66;10647:9;10643:82;10638:3;10631:95;10781:6;10774:14;10767:22;10759:6;10755:35;10750:3;10746:45;10739:52;;10610:191;;10810:356;10841:6;10838:1;10831:17;10871:4;10916:2;10913:1;10903:16;10941:1;10955:165;10969:6;10966:1;10963:13;10955:165;;;11047:14;;11034:11;;;11027:35;11090:16;;;;10984:10;;10955:165;;;10959:3;;;11149:6;11144:3;11140:16;11133:23;;10576:590;-1:-1:-1;11182:3:94;;10293:898;-1:-1:-1;;;;;;10293:898:94:o;11196:184::-;11266:6;11319:2;11307:9;11298:7;11294:23;11290:32;11287:52;;;11335:1;11332;11325:12;11287:52;-1:-1:-1;11358:16:94;;11196:184;-1:-1:-1;11196:184:94:o;11638:349::-;11677:3;11708:66;11701:5;11698:77;11695:257;;11808:77;11805:1;11798:88;11909:4;11906:1;11899:15;11937:4;11934:1;11927:15;11695:257;-1:-1:-1;11979:1:94;11968:13;;11638:349::o;11992:245::-;12050:6;12103:2;12091:9;12082:7;12078:23;12074:32;12071:52;;;12119:1;12116;12109:12;12071:52;12158:9;12145:23;12177:30;12201:5;12177:30;:::i;12510:289::-;12685:6;12674:9;12667:25;12728:2;12723;12712:9;12708:18;12701:30;12648:4;12748:45;12789:2;12778:9;12774:18;12766:6;12748:45;:::i;12804:544::-;12905:2;12900:3;12897:11;12894:448;;;12941:1;12966:5;12962:2;12955:17;13011:4;13007:2;12997:19;13081:2;13069:10;13065:19;13062:1;13058:27;13052:4;13048:38;13117:4;13105:10;13102:20;13099:47;;;-1:-1:-1;13140:4:94;13099:47;13195:2;13190:3;13186:12;13183:1;13179:20;13173:4;13169:31;13159:41;;13250:82;13268:2;13261:5;13258:13;13250:82;;;13313:17;;;13294:1;13283:13;13250:82;;13584:1467;13708:3;13702:10;13735:18;13727:6;13724:30;13721:56;;;13757:18;;:::i;:::-;13786:96;13875:6;13835:38;13867:4;13861:11;13835:38;:::i;:::-;13829:4;13786:96;:::i;:::-;13937:4;;14001:2;13990:14;;14018:1;14013:781;;;;14838:1;14855:6;14852:89;;;-1:-1:-1;14907:19:94;;;14901:26;14852:89;13490:66;13481:1;13477:11;;;13473:84;13469:89;13459:100;13565:1;13561:11;;;13456:117;14954:81;;13983:1062;;14013:781;10240:1;10233:14;;;10277:4;10264:18;;14061:66;14049:79;;;14225:236;14239:7;14236:1;14233:14;14225:236;;;14328:19;;;14322:26;14307:42;;14420:27;;;;14388:1;14376:14;;;;14255:19;;14225:236;;;14229:3;14489:6;14480:7;14477:19;14474:261;;;14550:19;;;14544:26;14651:66;14633:1;14629:14;;;14645:3;14625:24;14621:97;14617:102;14602:118;14587:134;;14474:261;-1:-1:-1;;;;;14781:1:94;14765:14;;;14761:22;14748:36;;-1:-1:-1;13584:1467:94:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue((uint256,uint256,uint8,uint32))": "dcf66394",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue(uint256)": "0ff4c916",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set(uint256,(uint256,uint256,uint8,uint32))": "7a61f2b1",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"turnsLeft\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"moveCardLength\",\"type\":\"uint32\"}],\"internalType\":\"struct MatchType\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"turnsLeft\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"moveCardLength\",\"type\":\"uint32\"}],\"internalType\":\"struct MatchType\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"indexer\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finishedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"turnsLeft\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"moveCardLength\",\"type\":\"uint32\"}],\"internalType\":\"struct MatchType\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getEntitiesWithValue(bytes)\":{\"params\":{\"value\":\"Abi-encoded value to get the list of entities with this value for.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerIndexer(address)\":{\"params\":{\"indexer\":\"Address of the indexer to notify when a component value is set.\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Get a list of all entities that have a value in this component.\"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Get a list of all entities that have the specified value in this component.\"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Register a new indexer that gets notified when a component value is set.\"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"notice\":\"You can deploy this contract as ID for a system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/MatchComponent.sol\":\"MatchComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@ensdomains/=../../node_modules/@ensdomains/\",\":@latticexyz/=../../node_modules/@latticexyz/\",\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":@zondax/=../../node_modules/@zondax/\",\":buffer/=../../node_modules/data/contracts/lib/buffer/\",\":components/=src/components/\",\":data/=../../node_modules/data/\",\":ds-test/=../../node_modules/ds-test/src/\",\":eth-gas-reporter/=../../node_modules/eth-gas-reporter/\",\":filecoin-solidity/=../../node_modules/data/contracts/lib/filecoin-solidity/\",\":forge-std/=../../node_modules/forge-std/src/\",\":hardhat-deploy/=../../node_modules/hardhat-deploy/\",\":hardhat/=../../node_modules/hardhat/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":openzeppelin-contracts/=../../node_modules/data/contracts/lib/openzeppelin-contracts/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solidity-cborutils/=../../node_modules/solidity-cborutils/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/Component.sol\":{\"keccak256\":\"0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a\",\"dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x44e1afa8b4b2132122255943deb1ba8787693cd5893876a06643deed3052b859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3761f562ad1a9fae0abf914e4e15592fb8b7dd231039448d20ad7dcfabf6de41\",\"dweb:/ipfs/QmbLN1mfNXYyrc4qxQauvBYTyJu9nR18t9xb54GY8xP3T7\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IEntityContainer.sol\":{\"keccak256\":\"0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10\",\"dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IEntityIndexer.sol\":{\"keccak256\":\"0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4\",\"dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/MatchComponent.sol\":{\"keccak256\":\"0x432badf435aaa82dce324eaaf37cc5409623a05f085b9cb4fd2c0125d0b73561\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8a9cd2189e652abc137b726de91637fab05860efbc2da8211e4b25f1e35ab278\",\"dweb:/ipfs/QmS9US5e649WceUY7ws1PbYfjpNRmBWCpyRMKgfXL6QTJ6\"]},\"src/libraries/MSTypes.sol\":{\"keccak256\":\"0x947fb5a9f5b6cc466d127f5a104ed268f36ea6b40d7969a1ca1c57243fdc7610\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05ae387f7d0c17cf5242b215b168d380063306fdf425d9f5f26bb0311dcd26dd\",\"dweb:/ipfs/QmS3GEV9u8jm8ALvMSFRgitGBW6R94EuVri2kiqLsCSQ8r\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MatchType",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finishedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "turnsLeft",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "moveCardLength",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct MatchType",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finishedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "turnsLeft",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "moveCardLength",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "indexer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "struct MatchType",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finishedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "turnsLeft",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "moveCardLength",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getEntitiesWithValue(bytes)": {
            "params": {
              "value": "Abi-encoded value to get the list of entities with this value for."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerIndexer(address)": {
            "params": {
              "indexer": "Address of the indexer to notify when a component value is set."
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Get a list of all entities that have a value in this component."
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Get a list of all entities that have the specified value in this component."
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Register a new indexer that gets notified when a component value is set."
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=../../node_modules/@ensdomains/",
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@openzeppelin/=../../node_modules/@openzeppelin/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":@zondax/=../../node_modules/@zondax/",
        ":buffer/=../../node_modules/data/contracts/lib/buffer/",
        ":components/=src/components/",
        ":data/=../../node_modules/data/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":eth-gas-reporter/=../../node_modules/eth-gas-reporter/",
        ":filecoin-solidity/=../../node_modules/data/contracts/lib/filecoin-solidity/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":hardhat-deploy/=../../node_modules/hardhat-deploy/",
        ":hardhat/=../../node_modules/hardhat/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":openzeppelin-contracts/=../../node_modules/data/contracts/lib/openzeppelin-contracts/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solidity-cborutils/=../../node_modules/solidity-cborutils/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/MatchComponent.sol": "MatchComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Component.sol": {
        "keccak256": "0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874",
        "urls": [
          "bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a",
          "dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x44e1afa8b4b2132122255943deb1ba8787693cd5893876a06643deed3052b859",
        "urls": [
          "bzz-raw://3761f562ad1a9fae0abf914e4e15592fb8b7dd231039448d20ad7dcfabf6de41",
          "dweb:/ipfs/QmbLN1mfNXYyrc4qxQauvBYTyJu9nR18t9xb54GY8xP3T7"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IEntityContainer.sol": {
        "keccak256": "0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8",
        "urls": [
          "bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10",
          "dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IEntityIndexer.sol": {
        "keccak256": "0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5",
        "urls": [
          "bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4",
          "dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/MatchComponent.sol": {
        "keccak256": "0x432badf435aaa82dce324eaaf37cc5409623a05f085b9cb4fd2c0125d0b73561",
        "urls": [
          "bzz-raw://8a9cd2189e652abc137b726de91637fab05860efbc2da8211e4b25f1e35ab278",
          "dweb:/ipfs/QmS9US5e649WceUY7ws1PbYfjpNRmBWCpyRMKgfXL6QTJ6"
        ],
        "license": "Unlicense"
      },
      "src/libraries/MSTypes.sol": {
        "keccak256": "0x947fb5a9f5b6cc466d127f5a104ed268f36ea6b40d7969a1ca1c57243fdc7610",
        "urls": [
          "bzz-raw://05ae387f7d0c17cf5242b215b168d380063306fdf425d9f5f26bb0311dcd26dd",
          "dweb:/ipfs/QmS3GEV9u8jm8ALvMSFRgitGBW6R94EuVri2kiqLsCSQ8r"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/MatchComponent.sol",
    "id": 18135,
    "exportedSymbols": {
      "BareComponent": [
        18988
      ],
      "Component": [
        262
      ],
      "GodID": [
        18429
      ],
      "ID": [
        17972
      ],
      "IEntityIndexer": [
        19405
      ],
      "IWorld": [
        1116
      ],
      "LibTypes": [
        19027
      ],
      "MapSet": [
        19220
      ],
      "MatchComponent": [
        18134
      ],
      "MatchType": [
        18488
      ],
      "Set": [
        19386
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:1481:80",
    "nodes": [
      {
        "id": 17961,
        "nodeType": "PragmaDirective",
        "src": "38:24:80",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 17962,
        "nodeType": "ImportDirective",
        "src": "64:30:80",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/Component.sol",
        "file": "solecs/Component.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18135,
        "sourceUnit": 263,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 17964,
        "nodeType": "ImportDirective",
        "src": "96:49:80",
        "nodes": [],
        "absolutePath": "src/libraries/MSTypes.sol",
        "file": "../libraries/MSTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18135,
        "sourceUnit": 18489,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17963,
              "name": "GodID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18429,
              "src": "105:5:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17972,
        "nodeType": "VariableDeclaration",
        "src": "146:63:80",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "163:2:80",
        "scope": 18135,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 17965,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "146:7:80",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e4d6174636854797065",
                  "id": 17969,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "186:21:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_0f9dd24bbd2f19675b3fca355a567814eafa262312f033a2e289b40d70c05588",
                    "typeString": "literal_string \"component.MatchType\""
                  },
                  "value": "component.MatchType"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_0f9dd24bbd2f19675b3fca355a567814eafa262312f033a2e289b40d70c05588",
                    "typeString": "literal_string \"component.MatchType\""
                  }
                ],
                "id": 17968,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "176:9:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 17970,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "176:32:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 17967,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "168:7:80",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 17966,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "168:7:80",
              "typeDescriptions": {}
            }
          },
          "id": 17971,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "168:41:80",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 17974,
        "nodeType": "ImportDirective",
        "src": "212:53:80",
        "nodes": [],
        "absolutePath": "src/libraries/MSTypes.sol",
        "file": "../libraries/MSTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18135,
        "sourceUnit": 18489,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17973,
              "name": "MatchType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18488,
              "src": "221:9:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18134,
        "nodeType": "ContractDefinition",
        "src": "326:1192:80",
        "nodes": [
          {
            "id": 17987,
            "nodeType": "FunctionDefinition",
            "src": "367:50:80",
            "nodes": [],
            "body": {
              "id": 17986,
              "nodeType": "Block",
              "src": "415:2:80",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 17982,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17979,
                    "src": "404:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 17983,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17972,
                    "src": "411:2:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 17984,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 17981,
                  "name": "Component",
                  "nameLocations": [
                    "394:9:80"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "394:9:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "394:20:80"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 17980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17979,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "387:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 17987,
                  "src": "379:13:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "378:15:80"
            },
            "returnParameters": {
              "id": 17985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:0:80"
            },
            "scope": 18134,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18044,
            "nodeType": "FunctionDefinition",
            "src": "421:340:80",
            "nodes": [],
            "body": {
              "id": 18043,
              "nodeType": "Block",
              "src": "532:229:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 18004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17998,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17992,
                      "src": "538:4:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 18002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "558:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 18001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "545:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 17999,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "549:6:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 18000,
                          "nodeType": "ArrayTypeName",
                          "src": "549:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 18003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "545:15:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "538:22:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 18005,
                  "nodeType": "ExpressionStatement",
                  "src": "538:22:80"
                },
                {
                  "expression": {
                    "id": 18013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18006,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17996,
                      "src": "566:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$19026_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 18011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "602:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 18010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "575:26:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$19026_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 18008,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 18007,
                              "name": "LibTypes.SchemaValue",
                              "nameLocations": [
                                "579:8:80",
                                "588:11:80"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 19026,
                              "src": "579:20:80"
                            },
                            "referencedDeclaration": 19026,
                            "src": "579:20:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$19026",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 18009,
                          "nodeType": "ArrayTypeName",
                          "src": "579:22:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$19026_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 18012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "575:29:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$19026_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "566:38:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$19026_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 18014,
                  "nodeType": "ExpressionStatement",
                  "src": "566:38:80"
                },
                {
                  "expression": {
                    "id": 18019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18015,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17992,
                        "src": "611:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 18017,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 18016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "616:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "611:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "67616d65426567696e",
                      "id": 18018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "621:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6d0861d8080e443028aad1e245db3f968f2cadeb696fb548cc27c1471761fcc0",
                        "typeString": "literal_string \"gameBegin\""
                      },
                      "value": "gameBegin"
                    },
                    "src": "611:21:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 18020,
                  "nodeType": "ExpressionStatement",
                  "src": "611:21:80"
                },
                {
                  "expression": {
                    "id": 18027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18021,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17996,
                        "src": "638:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$19026_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 18023,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 18022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "645:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "638:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$19026",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 18024,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19027,
                          "src": "650:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$19027_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 18025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "659:11:80",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19026,
                        "src": "650:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$19026_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 18026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "671:7:80",
                      "memberName": "UINT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19005,
                      "src": "650:28:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$19026",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "638:40:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$19026",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 18028,
                  "nodeType": "ExpressionStatement",
                  "src": "638:40:80"
                },
                {
                  "expression": {
                    "id": 18033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18029,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17992,
                        "src": "685:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 18031,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 18030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "690:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "685:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d6f7665436172644c656e677468",
                      "id": 18032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "695:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e2ccf32142ec91cb66374cd14040a677ffd30e62c236909a6aca0ab8407e8a0c",
                        "typeString": "literal_string \"moveCardLength\""
                      },
                      "value": "moveCardLength"
                    },
                    "src": "685:26:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 18034,
                  "nodeType": "ExpressionStatement",
                  "src": "685:26:80"
                },
                {
                  "expression": {
                    "id": 18041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18035,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17996,
                        "src": "717:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$19026_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 18037,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 18036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "724:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "717:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$19026",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 18038,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19027,
                          "src": "729:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$19027_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 18039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "738:11:80",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19026,
                        "src": "729:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$19026_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 18040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "750:6:80",
                      "memberName": "UINT32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19002,
                      "src": "729:27:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$19026",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "717:39:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$19026",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 18042,
                  "nodeType": "ExpressionStatement",
                  "src": "717:39:80"
                }
              ]
            },
            "baseFunctions": [
              21022
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "430:9:80",
            "overrides": {
              "id": 17989,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "454:8:80"
            },
            "parameters": {
              "id": 17988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:2:80"
            },
            "returnParameters": {
              "id": 17997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17992,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "488:4:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 18044,
                  "src": "472:20:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17990,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "472:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 17991,
                    "nodeType": "ArrayTypeName",
                    "src": "472:8:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17996,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "524:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 18044,
                  "src": "494:36:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$19026_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17994,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 17993,
                        "name": "LibTypes.SchemaValue",
                        "nameLocations": [
                          "494:8:80",
                          "503:11:80"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 19026,
                        "src": "494:20:80"
                      },
                      "referencedDeclaration": 19026,
                      "src": "494:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$19026",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 17995,
                    "nodeType": "ArrayTypeName",
                    "src": "494:22:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$19026_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:60:80"
            },
            "scope": 18134,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18060,
            "nodeType": "FunctionDefinition",
            "src": "765:107:80",
            "nodes": [],
            "body": {
              "id": 18059,
              "nodeType": "Block",
              "src": "828:44:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18053,
                        "name": "entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18046,
                        "src": "838:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18055,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18049,
                            "src": "859:6:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                              "typeString": "struct MatchType calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                              "typeString": "struct MatchType calldata"
                            }
                          ],
                          "id": 18054,
                          "name": "encodedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18133,
                          "src": "846:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_MatchType_$18488_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct MatchType calldata) pure returns (bytes memory)"
                          }
                        },
                        "id": 18056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "846:20:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18052,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18060,
                        18863
                      ],
                      "referencedDeclaration": 18863,
                      "src": "834:3:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 18057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "834:33:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18058,
                  "nodeType": "ExpressionStatement",
                  "src": "834:33:80"
                }
              ]
            },
            "functionSelector": "7a61f2b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "774:3:80",
            "parameters": {
              "id": 18050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18046,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "786:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 18060,
                  "src": "778:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18049,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "813:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 18060,
                  "src": "794:25:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                    "typeString": "struct MatchType"
                  },
                  "typeName": {
                    "id": 18048,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18047,
                      "name": "MatchType",
                      "nameLocations": [
                        "794:9:80"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18488,
                      "src": "794:9:80"
                    },
                    "referencedDeclaration": 18488,
                    "src": "794:9:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$18488_storage_ptr",
                      "typeString": "struct MatchType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:43:80"
            },
            "returnParameters": {
              "id": 18051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "828:0:80"
            },
            "scope": 18134,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18100,
            "nodeType": "FunctionDefinition",
            "src": "876:322:80",
            "nodes": [],
            "body": {
              "id": 18099,
              "nodeType": "Block",
              "src": "949:249:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    18069,
                    18071,
                    18073,
                    18075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18069,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nameLocation": "964:9:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 18099,
                      "src": "956:17:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18068,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "956:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18071,
                      "mutability": "mutable",
                      "name": "finishedAt",
                      "nameLocation": "983:10:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 18099,
                      "src": "975:18:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18070,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "975:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18073,
                      "mutability": "mutable",
                      "name": "turnsLeft",
                      "nameLocation": "1001:9:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 18099,
                      "src": "995:15:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 18072,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "995:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18075,
                      "mutability": "mutable",
                      "name": "moveCardLength",
                      "nameLocation": "1019:14:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 18099,
                      "src": "1012:21:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 18074,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1012:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18091,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18079,
                            "name": "entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18062,
                            "src": "1067:6:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18078,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18908,
                          "src": "1055:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 18080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1055:19:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 18082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1083:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 18081,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1083:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 18084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1092:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 18083,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1092:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 18086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1101:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 18085,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1101:5:80",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 18088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1108:6:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 18087,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1108:6:80",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 18089,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1082:33:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint8_$_$_t_type$_t_uint32_$_$",
                          "typeString": "tuple(type(uint256),type(uint256),type(uint8),type(uint32))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint8_$_$_t_type$_t_uint32_$_$",
                          "typeString": "tuple(type(uint256),type(uint256),type(uint8),type(uint32))"
                        }
                      ],
                      "expression": {
                        "id": 18076,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1037:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 18077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1041:6:80",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1037:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 18090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1037:84:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint32_$",
                      "typeString": "tuple(uint256,uint256,uint8,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "955:166:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18093,
                        "name": "startedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18069,
                        "src": "1144:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18094,
                        "name": "finishedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18071,
                        "src": "1155:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18095,
                        "name": "turnsLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18073,
                        "src": "1167:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 18096,
                        "name": "moveCardLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18075,
                        "src": "1178:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 18092,
                      "name": "MatchType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18488,
                      "src": "1134:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_MatchType_$18488_storage_ptr_$",
                        "typeString": "type(struct MatchType storage pointer)"
                      }
                    },
                    "id": 18097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:59:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$18488_memory_ptr",
                      "typeString": "struct MatchType memory"
                    }
                  },
                  "functionReturnParameters": 18067,
                  "id": 18098,
                  "nodeType": "Return",
                  "src": "1127:66:80"
                }
              ]
            },
            "functionSelector": "0ff4c916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "885:8:80",
            "parameters": {
              "id": 18063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18062,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "902:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 18100,
                  "src": "894:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "893:16:80"
            },
            "returnParameters": {
              "id": 18067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18066,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18100,
                  "src": "931:16:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchType_$18488_memory_ptr",
                    "typeString": "struct MatchType"
                  },
                  "typeName": {
                    "id": 18065,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18064,
                      "name": "MatchType",
                      "nameLocations": [
                        "931:9:80"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18488,
                      "src": "931:9:80"
                    },
                    "referencedDeclaration": 18488,
                    "src": "931:9:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$18488_storage_ptr",
                      "typeString": "struct MatchType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "930:18:80"
            },
            "scope": 18134,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18116,
            "nodeType": "FunctionDefinition",
            "src": "1202:156:80",
            "nodes": [],
            "body": {
              "id": 18115,
              "nodeType": "Block",
              "src": "1298:60:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18111,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18103,
                            "src": "1345:6:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                              "typeString": "struct MatchType calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                              "typeString": "struct MatchType calldata"
                            }
                          ],
                          "id": 18110,
                          "name": "encodedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18133,
                          "src": "1332:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_MatchType_$18488_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct MatchType calldata) pure returns (bytes memory)"
                          }
                        },
                        "id": 18112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1332:20:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18109,
                      "name": "getEntitiesWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18116,
                        104
                      ],
                      "referencedDeclaration": 104,
                      "src": "1311:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (uint256[] memory)"
                      }
                    },
                    "id": 18113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:42:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 18108,
                  "id": 18114,
                  "nodeType": "Return",
                  "src": "1304:49:80"
                }
              ]
            },
            "functionSelector": "dcf66394",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitiesWithValue",
            "nameLocation": "1211:20:80",
            "parameters": {
              "id": 18104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18103,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1251:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 18116,
                  "src": "1232:25:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                    "typeString": "struct MatchType"
                  },
                  "typeName": {
                    "id": 18102,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18101,
                      "name": "MatchType",
                      "nameLocations": [
                        "1232:9:80"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18488,
                      "src": "1232:9:80"
                    },
                    "referencedDeclaration": 18488,
                    "src": "1232:9:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$18488_storage_ptr",
                      "typeString": "struct MatchType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1231:27:80"
            },
            "returnParameters": {
              "id": 18108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18116,
                  "src": "1280:16:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18105,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1280:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18106,
                    "nodeType": "ArrayTypeName",
                    "src": "1280:9:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1279:18:80"
            },
            "scope": 18134,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18133,
            "nodeType": "FunctionDefinition",
            "src": "1362:154:80",
            "nodes": [],
            "body": {
              "id": 18132,
              "nodeType": "Block",
              "src": "1447:69:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18126,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18119,
                          "src": "1471:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                            "typeString": "struct MatchType calldata"
                          }
                        },
                        "id": 18127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1478:9:80",
                        "memberName": "startedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18481,
                        "src": "1471:16:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 18128,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18119,
                          "src": "1489:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                            "typeString": "struct MatchType calldata"
                          }
                        },
                        "id": 18129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1496:14:80",
                        "memberName": "moveCardLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18487,
                        "src": "1489:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 18124,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1460:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 18125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1464:6:80",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1460:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 18130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:51:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 18123,
                  "id": 18131,
                  "nodeType": "Return",
                  "src": "1453:58:80"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodedValue",
            "nameLocation": "1371:12:80",
            "parameters": {
              "id": 18120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18119,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1403:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 18133,
                  "src": "1384:25:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchType_$18488_calldata_ptr",
                    "typeString": "struct MatchType"
                  },
                  "typeName": {
                    "id": 18118,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18117,
                      "name": "MatchType",
                      "nameLocations": [
                        "1384:9:80"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18488,
                      "src": "1384:9:80"
                    },
                    "referencedDeclaration": 18488,
                    "src": "1384:9:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchType_$18488_storage_ptr",
                      "typeString": "struct MatchType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1383:27:80"
            },
            "returnParameters": {
              "id": 18123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18133,
                  "src": "1433:12:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18121,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:14:80"
            },
            "scope": 18134,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17976,
              "name": "Component",
              "nameLocations": [
                "353:9:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 262,
              "src": "353:9:80"
            },
            "id": 17977,
            "nodeType": "InheritanceSpecifier",
            "src": "353:9:80"
          }
        ],
        "canonicalName": "MatchComponent",
        "contractDependencies": [
          19220,
          19386
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 17975,
          "nodeType": "StructuredDocumentation",
          "src": "267:59:80",
          "text": "@notice You can deploy this contract as ID for a system"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          18134,
          262,
          18988,
          21772,
          19424,
          1798,
          21330,
          21828,
          21206,
          21073,
          21817,
          1841,
          21340
        ],
        "name": "MatchComponent",
        "nameLocation": "335:14:80",
        "scope": 18135,
        "usedErrors": [
          18788,
          21699,
          21825,
          21827
        ]
      }
    ],
    "license": "Unlicense"
  },
  "id": 80
}