/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IncrementSystem,
  IncrementSystemInterface,
} from "../IncrementSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bda380380610bda83398101604081905261002f91610197565b818161003a336100ea565b6001600160a01b0381161561004f57806100b1565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b191906101d1565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506101f5915050565b60006100fe61015b60201b6102351760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b038116811461019457600080fd5b50565b600080604083850312156101aa57600080fd5b82516101b58161017f565b60208401519092506101c68161017f565b809150509250929050565b6000602082840312156101e357600080fd5b81516101ee8161017f565b9392505050565b6109d6806102046000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046106aa565b6100cf565b604051610071919061075d565b60405180910390f35b6100646100883660046107c9565b610142565b610095610174565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046107e2565b6101b9565b005b60606000828060200190518101906100e7919061081f565b600080549192509061012f9073ffffffffffffffffffffffffffffffffffffffff167fa4f0c65f7e06d34f8ffe24c1d7bdcdb9e73b1d07702f650b38c22b90f1781065610259565b905061013b81836103a9565b5050919050565b606061016e8260405160200161015a91815260200190565b6040516020818303038152906040526100cf565b92915050565b60006101b47f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610229576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61023281610578565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156102c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261030f9190810190610838565b90508051600003610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b6103a181600081518110610396576103966108de565b602002602001015190565b949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b919061090d565b6104465760006104d5565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d5919061092f565b905073ffffffffffffffffffffffffffffffffffffffff831663d923c3c4836104ff846001610955565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b50505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610232928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106a2576106a261062c565b604052919050565b600060208083850312156106bd57600080fd5b823567ffffffffffffffff808211156106d557600080fd5b818501915085601f8301126106e957600080fd5b8135818111156106fb576106fb61062c565b61072b847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161065b565b9150808252868482850101111561074157600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561078a5785810183015185820160400152820161076e565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000602082840312156107db57600080fd5b5035919050565b6000602082840312156107f457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461081857600080fd5b9392505050565b60006020828403121561083157600080fd5b5051919050565b6000602080838503121561084b57600080fd5b825167ffffffffffffffff8082111561086357600080fd5b818501915085601f83011261087757600080fd5b8151818111156108895761088961062c565b8060051b915061089a84830161065b565b81815291830184019184810190888411156108b457600080fd5b938501935b838510156108d2578451825293850193908501906108b9565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561091f57600080fd5b8151801515811461081857600080fd5b60006020828403121561094157600080fd5b815163ffffffff8116811461081857600080fd5b63ffffffff818116838216019080821115610999577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b509291505056fea2646970667358221220a18ee058bc0e7efa57827ae5e3f2863a652bb4fef26dde26d00bc63b810c3ea064736f6c63430008110033";

type IncrementSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncrementSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncrementSystem__factory extends ContractFactory {
  constructor(...args: IncrementSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IncrementSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<IncrementSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): IncrementSystem {
    return super.attach(address) as IncrementSystem;
  }
  override connect(signer: Signer): IncrementSystem__factory {
    return super.connect(signer) as IncrementSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncrementSystemInterface {
    return new utils.Interface(_abi) as IncrementSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncrementSystem {
    return new Contract(address, _abi, signerOrProvider) as IncrementSystem;
  }
}
