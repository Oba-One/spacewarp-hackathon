/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { InitSystem, InitSystemInterface } from "../InitSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016eb380380620016eb8339810160408190526200003491620001a8565b81816200004133620000f7565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd9190620001e7565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506200020e915050565b60006200010e6200016b60201b620002031760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b0381168114620001a557600080fd5b50565b60008060408385031215620001bc57600080fd5b8251620001c9816200018f565b6020840151909250620001dc816200018f565b809150509250929050565b600060208284031215620001fa57600080fd5b815162000207816200018f565b9392505050565b6114cd806200021e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f36600461101d565b6100cf565b6040516100719190611134565b60405180910390f35b61006461008836600461114e565b610110565b610095610142565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611167565b610187565b005b60606000828060200190518101906100e7919061119d565b90506100f281610227565b60006100fd82610327565b90506101098183610531565b5050919050565b606061013c8260405160200161012891815260200190565b6040516020818303038152906040526100cf565b92915050565b60006101827f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101f7576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102008161091e565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000805461026b9073ffffffffffffffffffffffffffffffffffffffff167f0f9dd24bbd2f19675b3fca355a567814eafa262312f033a2e289b40d70c05588610927565b6040805160608101825260008152600160208201908152600582840190815292517f66c52bed0000000000000000000000000000000000000000000000000000000081526004810187905291516024830152516044820152905160ff16606482015290915073ffffffffffffffffffffffffffffffffffffffff8216906366c52bed90608401600060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050505050565b60008061033333610a77565b6040805160808101825260088183019081527f506c617965722031000000000000000000000000000000000000000000000000606083015281528151808301909252601b82527f546865206f6e652077686f20637265617465207468652067616d650000000000602083810191909152810191909152600054919250906103f09073ffffffffffffffffffffffffffffffffffffffff167f13f32cb89a86a373dc637b3b3ac445f7b735a976d40d242d8fb95792881bcb23610927565b73ffffffffffffffffffffffffffffffffffffffff1663a235404483836040518363ffffffff1660e01b815260040161042a9291906111b6565b600060405180830381600087803b15801561044457600080fd5b505af1158015610458573d6000803e3d6000fd5b50506000546104a0925073ffffffffffffffffffffffffffffffffffffffff1690507faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610927565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810186905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b15801561051157600080fd5b505af1158015610525573d6000803e3d6000fd5b50939695505050505050565b6105c0826040518060400160405280600e81526020017f416d65726963612043686176657a0000000000000000000000000000000000008152506040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060600160405280602e8152602001611356602e913985610a95565b61064f826040518060400160405280600781526020017f416e74204d616e000000000000000000000000000000000000000000000000008152506040518060400160405280600181526020017f33000000000000000000000000000000000000000000000000000000000000008152506040518060600160405280602e815260200161146a602e913985610a95565b6106de826040518060400160405280600a81526020017f41706f63616c79707365000000000000000000000000000000000000000000008152506040518060400160405280600181526020017f34000000000000000000000000000000000000000000000000000000000000008152506040518060600160405280602e8152602001611384602e913985610a95565b61076d826040518060400160405280600a81526020017f426c61636b20426f6c74000000000000000000000000000000000000000000008152506040518060400160405280600181526020017f35000000000000000000000000000000000000000000000000000000000000008152506040518060600160405280602e815260200161140e602e913985610a95565b6107fc826040518060400160405280600e81526020017f4361707461696e204d617276656c0000000000000000000000000000000000008152506040518060400160405280600181526020017f36000000000000000000000000000000000000000000000000000000000000008152506040518060600160405280602e81526020016113b2602e913985610a95565b61088b826040518060400160405280600681526020017f5468616e6f7300000000000000000000000000000000000000000000000000008152506040518060400160405280600181526020017f37000000000000000000000000000000000000000000000000000000000000008152506040518060600160405280602e81526020016113e0602e913985610a95565b61091a826040518060400160405280600c81526020017f50726f666573736f7220582e00000000000000000000000000000000000000008152506040518060400160405280600181526020017f38000000000000000000000000000000000000000000000000000000000000008152506040518060600160405280602e815260200161143c602e913985610a95565b5050565b61020081610ef3565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610997573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109dd919081019061121c565b90508051600003610a4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b610a6f81600081518110610a6457610a646112c2565b602002602001015190565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff821661013c565b604080518082018252858152602080820186905260015483517f614bfa6e00000000000000000000000000000000000000000000000000000000815293519293600093849373ffffffffffffffffffffffffffffffffffffffff9093169263614bfa6e92600480820193918290030181865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d919061119d565b600054909150610b839073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b1843106610927565b73ffffffffffffffffffffffffffffffffffffffff1663f419df7282846040518363ffffffff1660e01b8152600401610bbd9291906112f1565b600060405180830381600087803b158015610bd757600080fd5b505af1158015610beb573d6000803e3d6000fd5b5050600054610c33925073ffffffffffffffffffffffffffffffffffffffff1690507faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610927565b6040517f1ab06ee500000000000000000000000000000000000000000000000000000000815260048101839052602481018a905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b5050600054610d00925073ffffffffffffffffffffffffffffffffffffffff1690507f451428f4c68843403783cb59130cc0d615222b44098924139ac9012ac78cfbcd610927565b73ffffffffffffffffffffffffffffffffffffffff16636437197782876040518363ffffffff1660e01b8152600401610d3a92919061133c565b600060405180830381600087803b158015610d5457600080fd5b505af1158015610d68573d6000803e3d6000fd5b5050600054610db0925073ffffffffffffffffffffffffffffffffffffffff1690507f13f32cb89a86a373dc637b3b3ac445f7b735a976d40d242d8fb95792881bcb23610927565b73ffffffffffffffffffffffffffffffffffffffff1663a235404482856040518363ffffffff1660e01b8152600401610dea9291906111b6565b600060405180830381600087803b158015610e0457600080fd5b505af1158015610e18573d6000803e3d6000fd5b5050600054610e60925073ffffffffffffffffffffffffffffffffffffffff1690507fe072768ea94af234cff732de41ecf093d211b11aaa861f67f6545a1a1a35a4ea610927565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526024810186905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b158015610ed157600080fd5b505af1158015610ee5573d6000803e3d6000fd5b505050505050505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561101557611015610f9f565b604052919050565b6000602080838503121561103057600080fd5b823567ffffffffffffffff8082111561104857600080fd5b818501915085601f83011261105c57600080fd5b81358181111561106e5761106e610f9f565b61109e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610fce565b915080825286848285010111156110b457600080fd5b8084840185840137600090820190930192909252509392505050565b6000815180845260005b818110156110f6576020818501810151868301820152016110da565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061114760208301846110d0565b9392505050565b60006020828403121561116057600080fd5b5035919050565b60006020828403121561117957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461114757600080fd5b6000602082840312156111af57600080fd5b5051919050565b82815260406020820152600082516040808401526111d760808401826110d0565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc084830301606085015261121282826110d0565b9695505050505050565b6000602080838503121561122f57600080fd5b825167ffffffffffffffff8082111561124757600080fd5b818501915085601f83011261125b57600080fd5b81518181111561126d5761126d610f9f565b8060051b915061127e848301610fce565b818152918301840191848101908884111561129857600080fd5b938501935b838510156112b65784518252938501939085019061129d565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b828152604081016005831061132f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260208301529392505050565b828152604060208201526000610a6f60408301846110d056fe516d6572586b55716269785566793437594875735042565464324350444267706d48567478697943396e33314e4e516d653975657a6b655661525a38516f324e313664754643736d475a6a5869587432746b5048364b5a5556336e37516d5963374359643277706959363950647a5772735a6a7255756d36394744767a74323459705246556d68723855516d56524b6d75666953446f676f516836633168654662437655545367753678637479635462356a796f43636d31516d5a52544b53356942554c646b337531536d36394d567945615065316576636e5546665761596a346341376176516d4e65344162476b7979616f4b6a4c6445366a706979754d6a6973695065474151324e41375469675731703545516d573771345178795943366d465a6e6955375371585069765373696a4e4374366b574451577869577079444b33a26469706673582212204a3445c56b83b53031c2fe8959785ee206a6aefbc5764eac70707c35107eb32264736f6c63430008110033";

type InitSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitSystem__factory extends ContractFactory {
  constructor(...args: InitSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InitSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<InitSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): InitSystem {
    return super.attach(address) as InitSystem;
  }
  override connect(signer: Signer): InitSystem__factory {
    return super.connect(signer) as InitSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitSystemInterface {
    return new utils.Interface(_abi) as InitSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitSystem {
    return new Contract(address, _abi, signerOrProvider) as InitSystem;
  }
}
