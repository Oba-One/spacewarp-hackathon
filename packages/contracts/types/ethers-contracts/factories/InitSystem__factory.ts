/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { InitSystem, InitSystemInterface } from "../InitSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f7938038062000f798339810160408190526200003491620001a8565b81816200004133620000f7565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd9190620001e7565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506200020e915050565b60006200010e6200016b60201b620006c31760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b0381168114620001a557600080fd5b50565b60008060408385031215620001bc57600080fd5b8251620001c9816200018f565b6020840151909250620001dc816200018f565b809150509250929050565b600060208284031215620001fa57600080fd5b815162000207816200018f565b9392505050565b610d5b806200021e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063e1df4ba6146100a7578063f2fde38b146100af575b600080fd5b61006461005f366004610969565b6100c4565b6040516100719190610a80565b60405180910390f35b6100826105e7565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b61006461062c565b6100c26100bd366004610a9a565b610647565b005b60606000339050600060405180604001604052806040518060400160405280600a81526020017f5370696465724d616e310000000000000000000000000000000000000000000081525081526020016040518060400160405280600d81526020017f5370696465726d616e204f6e6500000000000000000000000000000000000000815250815250905060006040518060c00160405280609d8152602001610c89609d91399050600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663614bfa6e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff9190610ad0565b6000549091506102459073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b18431066106e7565b73ffffffffffffffffffffffffffffffffffffffff1663f419df7282846040518363ffffffff1660e01b815260040161027f929190610ae9565b600060405180830381600087803b15801561029957600080fd5b505af11580156102ad573d6000803e3d6000fd5b50506000546102f5925073ffffffffffffffffffffffffffffffffffffffff1690507faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c75406106e7565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526024810187905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b15801561036657600080fd5b505af115801561037a573d6000803e3d6000fd5b50506000546103c2925073ffffffffffffffffffffffffffffffffffffffff1690507f451428f4c68843403783cb59130cc0d615222b44098924139ac9012ac78cfbcd6106e7565b73ffffffffffffffffffffffffffffffffffffffff16636437197782856040518363ffffffff1660e01b81526004016103fc929190610b34565b600060405180830381600087803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b5050600054610472925073ffffffffffffffffffffffffffffffffffffffff1690507f13f32cb89a86a373dc637b3b3ac445f7b735a976d40d242d8fb95792881bcb236106e7565b73ffffffffffffffffffffffffffffffffffffffff1663a235404482866040518363ffffffff1660e01b81526004016104ac929190610b4d565b600060405180830381600087803b1580156104c657600080fd5b505af11580156104da573d6000803e3d6000fd5b505060008054909250610524915073ffffffffffffffffffffffffffffffffffffffff167f0f9dd24bbd2f19675b3fca355a567814eafa262312f033a2e289b40d70c055886106e7565b60408051606081018252600081524260208201908152600582840190815292517f66c52bed00000000000000000000000000000000000000000000000000000000815261060d600482015291516024830152516044820152905160ff16606482015290915073ffffffffffffffffffffffffffffffffffffffff8216906366c52bed90608401600060405180830381600087803b1580156105c457600080fd5b505af11580156105d8573d6000803e3d6000fd5b50505050505050505050919050565b60006106277f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b604080516000815260208101909152606090610627906100c4565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146106b7576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c081610837565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261079d9190810190610bb3565b9050805160000361080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b61082f8160008151811061082457610824610c59565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516106c0928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610961576109616108eb565b604052919050565b6000602080838503121561097c57600080fd5b823567ffffffffffffffff8082111561099457600080fd5b818501915085601f8301126109a857600080fd5b8135818111156109ba576109ba6108eb565b6109ea847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161091a565b91508082528684828501011115610a0057600080fd5b8084840185840137600090820190930192909252509392505050565b6000815180845260005b81811015610a4257602081850181015186830182015201610a26565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610a936020830184610a1c565b9392505050565b600060208284031215610aac57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610a9357600080fd5b600060208284031215610ae257600080fd5b5051919050565b8281526040810160058310610b27577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260208301529392505050565b82815260406020820152600061082f6040830184610a1c565b8281526040602082015260008251604080840152610b6e6080840182610a1c565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152610ba98282610a1c565b9695505050505050565b60006020808385031215610bc657600080fd5b825167ffffffffffffffff80821115610bde57600080fd5b818501915085601f830112610bf257600080fd5b815181811115610c0457610c046108eb565b8060051b9150610c1584830161091a565b8181529183018401918481019088841115610c2f57600080fd5b938501935b83851015610c4d57845182529385019390850190610c34565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f696d616765732e756e73706c6173682e636f6d2f70686f746f2d313633353830353733373730372d3537353838356162303832303f69786c69623d72622d342e302e3326697869643d4d6e77784d6a4133664442384d48787761473930627931775957646c66487838664756756644423866487838266175746f3d666f726d6174266669743d63726f7026773d36383726713d3830a2646970667358221220c025df85acadb0dc9a4488994db70e8d96f69bfab4d57a06f0abf1b5924ba36b64736f6c63430008110033";

type InitSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitSystem__factory extends ContractFactory {
  constructor(...args: InitSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InitSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<InitSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): InitSystem {
    return super.attach(address) as InitSystem;
  }
  override connect(signer: Signer): InitSystem__factory {
    return super.connect(signer) as InitSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitSystemInterface {
    return new utils.Interface(_abi) as InitSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitSystem {
    return new Contract(address, _abi, signerOrProvider) as InitSystem;
  }
}
